$.param() : 객체값을 변환하여 queryString 된 문자열로 표현한다.

	var params = {width : 1680, height : 1050};	
	var str = $.param(params); // Ajax로 전송가능하도록 직렬화 , width=1680&height=1050

---------------------------------------//
.serialize() : 선택한 form의 데이터를 ajax로 전송할 수 있도록 직렬화 한다.

	<form id="form_1">
	<input type="hidden" name="a" value="1" />
	<input type="hidden" name="a" value="2" />
	</form>


	$("#form_1").serialize();    //  #form_1의 데이터를 직렬화한다. a=1&b=2

---------------------------------------//
JSON.parse(string) : "{}" json 형식의 문자열을 json 객체(또는 배열)로 만든다

	var string  = {"a":"1" , "b":"2"};

	try{
		obj = JSON.parse(string);

		console.log(obj.b); // 2

	}catch(e){
		console.log(e);
		alert('파싱에러');
	}

---------------------------------------//
JSON.stringify(jsonObj) : json 형태의 배열 또는 객체를  문자열로 만든다

	var jsonObj = {
			bno : 21,
			replyer : "동이",
			replytext : "오늘은 뭘 먹나?"
			};

	var str = JSON.stringify(jsonObj); //문자열로 변환

	console.log(jsonObj); // '{"bno":"21","replyer":"동이","":"오늘은 뭘 먹나?"}'

---------------------------------------//etc

jquery 함수를 확장해서 쓰는 유용한 함수 serializeObject
아래와 같이

	nm=솔개&age=47 -> {nm:"솔개", age:"47"}

쿼리 스트링을 객체로 만들어주는 함수다..
json으로 전송해야할때 필요하다..

	-------------------------------

	//jquery 확장함수로 만든다 (유명한 함수이다)
	$.fn.serializeObject = function() {
		"use strict"
		var result = {};
		var extend = function(i, element) {
			var node = result[element.name];
			if ("undefined" !== typeof node && node !== null) {
				if ($.isArray(node)) {
					node.push(element.value);
				} else {
					result[element.name] = [node, element.value];
				}
			} else {
				result[element.name] = element.value;
			}
		}

		$.each(this.serializeArray(), extend);
		return result;
	}
	-------------------------------

	<form id="form_1">
		<input type="hidden" name="nm" value="솔개" />
		<input type="hidden" name="age" value="47" />
	</form>
	
	var str = $("#form_1").serialize(); //nm=솔개&age=47

	var jsonObj = $('#form_1').serializeObject(); //{nm:"솔개", age:"47"}

	


	$.ajax({
			type : 'post',
			url : '/rest/basic',
			headers : {
				"Content-Type" : "application/json",
				"X-HTTP-Method-Override" : "POST"
			},
			dataType : 'text',
			data : JSON.stringify(jsonObj),
			success : function(result){
				console.log(result); // SUCCESS				
			}
			
	});
