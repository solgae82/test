
-- distinct (중복제거된 자료만)
select distinct job, deptno from emp; // job, deptno를 합친 결과가 유일한 것만 출력

-- ALL (기본)
select all job, deptno from emp;


-- 별칭(AS)
select sal annsal from emp;
select sal "annsal" from emp;
select sal AS annsal from emp;
select sal AS "월급" from emp;


-- 정렬(order by)
select * from emp order by deptno ASC, SAL DESC;

-- 조건절 (where)
select * from deptno = 30 or job='CLERK';
select * from deptno = 30 and job='CLERK';


-- 산술 연산자( + , -, * , /)
select * from emp where sal * 12 = 36000; //sal곱하기 12한 값이 36000인건만 검색

-- 비교연산자 ( > , >= , < , <=)
select * from emp where sal >=3000;

select * from emp where ename >= 'F'; //사원이름 첫문자가 'F'자 이상인것만 검색


-- 등가비교 연산자( = , != , <> ,^=)

-- 같지 않을때 (not , , != , <> ,^=)

select * from emp where sal != 3000;

select * from emp where sal <> 3000;

select * from emp where sal ^= 3000;

select * from emp where not sal = 3000; //논리 부정 연산자

-- IN 연산자
select * from emp where job in ('MANAGER','SALESMAN','CLERK');
select * from emp where job not in ('MANAGER','SALESMAN','CLERK'); // 아닌 것 검색

-- between 연산자
select * from emp where sal between 800 and 1600;
select * from emp where sal >=800 and sal <=1600;

-- like  연산자
_: 한개의 문자 데이터
%: 모든 문자데이터
select * from emp where ename like '_C%'; // SCOTT , ACDC 등
select * from emp where ename not like '_C%'; //두번째 글자가 'C'가 아닌 모든 데이터

-- escape 연산자
'_'를 데이터로 체크하기 위해 escape '\'를 사용했음[\문자외에 다른문자 사용가능]
select * from emp where ename like 'A\_%' escape '\'; // A_DB , A_BBB등


-- is null , is not null
select * from emp where comm= null; // 안 나온다, true, false 가 아닌  null이므로
select * from emp where comm is null;  // null이면 true
select * from emp where comm is not null;	//not null이면 true

-- 집합연산자
select empno, ename from emp where deptno =10
union
select empno, ename from emp where deptno =10

union : 합집합, 중복제거
union all : 합집합, 중복허용
muins : 차집합 
intersect : 교집합

열이름 갯수와 자료형이 같아야 출력된다.

-- 연산자 우선순위 (높은 것에서 낮은 순)
*, /
+, -
=, != , ^=, <>, >, >=, <, <=
is null, is not null, like, in
between A and B
not
and
or 
