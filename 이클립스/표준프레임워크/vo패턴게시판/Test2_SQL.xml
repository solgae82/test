<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="egovframework.test.e2.service.impl.TestDAO">

	<select id="selectCateList" parameterType="string" 	resultType="egovframework.test.e2.service.CodeVO">
		/* 공통  카테고리 값 가져오기*/
		SELECT 
			ID
			,CODE_NAME
			,NAME
			
		FROM CODE 
		WHERE 
			CODE_NAME= #{param};
	</select>
	<insert id="insertBbs"	parameterType="egovframework.test.e2.service.TestVO">
		/* bbs 등록 */
		INSERT INTO BBS
		(
			<trim prefixOverrides=",">
				<if test="id != null and !id.equals('')">,ID</if>
				<if test="userId != null and !userId.equals('')">,USER_ID</if>
				<if test="cate != null and !cate.equals('')">,CATE</if>
				<if test="sbScription != null and !sbScription.equals('')">,SB_SCRIPTION</if>
				<if test="description != null and !description.equals('')">,DESCRIPTION</if>
				<if test="regDate != null and !regDate.equals('')">,REG_DATE</if>
				<if test="upDate != null and !upDate.equals('')">,UP_DATE</if>
			</trim>
		)VALUES(
			<trim prefixOverrides=",">
				<if test="id != null and !id.equals('')">,#{id}</if>
				<if test="userId != null and !userId.equals('')">,#{userId}</if>
				<if test="cate != null and !cate.equals('')">,#{cate}</if>
				<if test="sbScription != null and !sbScription.equals('')">,#{sbScription}</if>
				<if test="description != null and !description.equals('')">,#{description}</if>
				<if test="regDate != null and !regDate.equals('')">,#{regDate}</if>
				<if test="upDate != null and !upDate.equals('')">,#{upDate}</if>
			</trim>
		)
	</insert>
	
	<update id="updateBbs" parameterType="egovframework.test.e2.service.TestVO">
		/* bbs 수정 */
		UPDATE BBS SET

			<trim prefixOverrides=",">
				<if test="id != null and !id.equals('')">,ID=#{id}</if>
				<if test="userId != null and !userId.equals('')">,USER_ID=#{userId}</if>
				<if test="cate != null and !cate.equals('')">,CATE=#{cate}</if>
				<if test="sbScription != null and !sbScription.equals('')">,SB_SCRIPTION=#{sbScription}</if>
				<if test="description != null and !description.equals('')">,DESCRIPTION=#{description}</if>
				<if test="regDate != null and !regDate.equals('')">,REG_DATE=#{regDate}</if>
				<if test="upDate != null and !upDate.equals('')">,UP_DATE=#{upDate}</if>
			</trim>
		
		WHERE
			ID=#{id}
	</update>
	
	<update id="updateBbs2" parameterType="egovframework.test.e2.service.TestVO">
		/* bbs 수정 2 */
		UPDATE BBS SET

			ID=#{id}
			,USER_ID=#{userId}
			,CATE=#{cate}
			,SB_SCRIPTION=#{sbScription}
			,DESCRIPTION=#{description}
			,REG_DATE=#{regDate}
			,UP_DATE=#{upDate}
		
		
		WHERE
			ID=#{id}
	</update>
	
	<select id="selectBbs"  parameterType="egovframework.test.e2.service.TestVO"
	 resultType="egovframework.test.e2.service.TestVO">
		/* 게시물 한개 가져오기 */
		SELECT 
			ID
			,USER_ID
			,CATE
			,SB_SCRIPTION
			,DESCRIPTION
			,REG_DATE
			,UP_DATE
		
		FROM 
			BBS
		WHERE
			ID=#{id}
	</select>
	
	<select id="selectListBbs"  parameterType="egovframework.test.e2.service.TestVO"
	 resultType="egovMap">
	 /* 게시물 리스트 가져오기*/
		SELECT 
			ID
			,USER_ID
			,CATE
			,(SELECT NAME FROM CODE WHERE ID=CATE) AS CATE_NM
			,SB_SCRIPTION
			,DESCRIPTION
			,REG_DATE
			,UP_DATE
		
		FROM 
			BBS
		<include refid="listWhere"></include>
		ORDER BY ID DESC 
		LIMIT #{firstIndex} , #{pageUnit}
		
	</select>
	<select id="selectCountBbs"  parameterType="egovframework.test.e2.service.TestVO"
	 resultType="int">
	 /* 게시물 리스트 갯수 가져오기*/
		SELECT 
			COUNT(*) AS CNT		
		FROM 
			BBS
		<include refid="listWhere"></include> 
		
		
	</select>
	
	<sql id="listWhere">
		<where>
			<if test="cateList != null">
				AND CATE IN <foreach collection="cateList" item="data" open="(" close=")" separator=",">#{data}</foreach>
			</if>
			<if test="beginDt != null or endDt != null">
				<if test=" !''.equals(beginDt)  or !''.equals(endDt)">
					<choose>
						<when test="!''.equals(beginDt) and ''.equals(endDt)">
							<![CDATA[
							AND ( 
								REG_DATE >= CONCAT(REPLACE(#{beginDt},'-',''),'000000') 
								) 
							]]>
						</when>
						<when test="''.equals(beginDt) and !''.equals(endDt)">
							<![CDATA[
							AND ( 
								REG_DATE <= CONCAT(REPLACE(#{endDt},'-',''),'235959') 
								) 
							]]>
						</when>
						<when test="!''.equals(beginDt) and !''.equals(endDt)">
							<![CDATA[
							AND ( 
								REG_DATE >= CONCAT(REPLACE(#{beginDt},'-',''),'000000')
								AND
								REG_DATE <= CONCAT(REPLACE(#{endDt},'-',''),'235959')
								) 
							]]>
						</when>
						
					</choose>
				</if>
			</if>
			<if test="searchCondition !=null and !searchCondition.equals('')">
				<if test="searchKeyword !=null and !searchKeyword.equals('')">
				<choose>
					<when test="searchCondition eq 'sbScription'">
					AND SB_SCRIPTION LIKE CONCAT('%',#{searchKeyword},'%')
					</when>
					<when test="searchCondition eq 'description'">
					AND DESCRIPTION LIKE CONCAT('%',#{searchKeyword},'%')
					</when>
				</choose>
				</if>
			</if>
		</where>
	</sql>
	
	<delete id="deleteBbs" parameterType="egovframework.test.e2.service.TestVO">
		/* 게시물 한개 삭제 */
		DELETE FROM BBS WHERE ID = #{id}
	</delete>
	
	
	<delete id="deleteMultiBbs" parameterType="list">
		/* 게시물 여러개 삭제 */
		DELETE FROM BBS WHERE ID IN
		<foreach collection="list" item="data" open="(" close=")" separator=",">#{data}</foreach>
	</delete>
</mapper>