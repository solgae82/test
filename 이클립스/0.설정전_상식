------------------- 퍼온 댓글
출처 : https://okky.kr/questions/410161

이클립스에 대해서 얘기할라면 참긴데 짧게 얘기해볼게요

일단 이클립스는 JDK를 통해서 컴파일 하지 않습니다. 기본적으로 내장된 컴파일러를 사용해요

런타인 환경은 사용자가 설치한 (그리고 설정한)것을 사용합니다.

케플러 버전은 1.7까지 컴파일러를 제공합니다. 

그렇기 때문에 Use an execution Environment설정을 이용할때 케플러 버전이 컴파일하고 있는 버전까지만 런타임 환경 목록을 보여주는거죠(잘 생각해보면 당연하죠 케플러 당시의 1.8버전이 없었다고 생각해보세요 그런데 런타임 목록을 1.8버전을 만들어 놨을리가 없잖아요)

Use default JRE는 사용자가 이클립스에 설정한(installed jre) jre중 default로 체크한 jre로 런타임 환경을 설정하는 거죠 글쓴이님은 해당 1.8 버전의 jre를 설정해 놓으셨네요

Use a project sp~~ jre 는 이건  이클립스에 설정한(installed jre) 여러 jre중에서 사용자가 선택할수 있도록 제공해주는거구요 

그래서 이 두 설정은 사용자가 설정한 1.8버전의 런타임 환경이 있으면 보여주는게 가능하죠

그럼 컴파일 레벨일 1.7이면 1.7로만 컴파일 되고 런타임은 1.8로 되냐? 라는 질문을 할수 있는데 

맞습니다. 그렇게 동작합니다. 그러니까 1.8JDK를 깔았고 런타임 환경을 1.8로 했지만 컴파일 레벨은 1.7이므로 1.7로 컴파일 되고 실행은 1.8로 됩니다. 아마 해당 설정을 가진 프로젝트에서는 람다식을 사용하지 못할꺼에요 람다는 1.8부터 지원 되니까요

그럼 케플러 버전의 이클립스를 1.8버전의 컴파일 레벨 설정 하는 방법은 무엇이냐? 

2가지가 있스빈다.

1 . 이클립스를 새 버전을 새로 설치 한다

2. 케플러 이클립스를 1.8을 지원하는 플러그인으로 업데이트를 하는겁니다.

-------------------

이클립스는 내부 자체 컴파일러가 있다고 한다.
컴파일러 최상위 버전은 고정이므로, 이클립스 버전마다 다르다 (검색하라)
jdk를 설정했다고 해서 그 jdk 버전의 컴파일러를 사용하는게 아니라는 것이다
jdk 설정은 jre를 위한 것이다

사용자가 수동 설정하는 것은 JRE로서 사용자가 설정할 수 있다.
그러므로 이클립스 내장 컴파일러가 어느 버전으로 컴파일 하는지 알아야 한다.

만약, 이클립스가 jdk 1.7로 컴파일하는 버전이라면, 람다식을 사용하지 못할 것이다
어디서 받은 java 소스를 이클립스에 프로젝트로 등록하려면, java 소스 버전과 이클립스 버전(내장 컴파일러)
을 맞춰야 한다. 

java source 버전과 맞는 버전의 이클립스를 선택해야한다는 것이다

------------------- JDK(JRE) 설정
이클립스는 버전별로 java jre 최소버전 지원 제한이 있다
대충 아래와 같다(검색해서 확인해야 한다)

	이클립스 4.6부터는 JDK 8 이상
	이클립스 4.17부터는 JDK 11 이상
	이클립스 4.25부터는 JDK 17 이상

출처: https://esoog.tistory.com/entry/스프링spring-버전-관리 [Blue Whale Wave:티스토리]

------------------- STS
STS(Spring Tool Suite)도 이클립스를 확장한 버전이므로, 
jdk 지원 버전 확인하려면 이클립스 빌드 버전을 확인해야한다.
Help>about Spring Tool Suite 4>Installation Details(버튼)>
Features(탭)>Feature Name : Eclipse Platform 버전 확인

예)
STS : 4.15.1.RELEASE
Eclipse Platfrom : 4.24.0
(해당 sts 이클립스 버전은 4.24.0 이다)