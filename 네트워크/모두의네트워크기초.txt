OSI 7 Layers
	1.물리계층 (Physical Layer)
		대표장비: 리피터, 허브
		데이터단위: 비트
	
	2.데이터링크계층 (Data Link Layer)
		대표장비: 브릿지, 스위치
		데이터단위: 프레임
		대표정보 : 송수신 MAC주소
	
	3.네트워크계층 (Network Layer)
		대표장비: 라우터
		데이터단위: 패킷
		대표정보: 송수신 IP주소
		
	4.전송계층 (Tranport Layer)
		데이터단위: 세그먼트
		대표정보: 송수신 Port번호
	
	5.세션계층 (Session Layer)	
	6.표현계층 (Presentation Layer)	
	7.응용계층 (Application Layer)
	
TCP/IP 4계층
	1.네트워크인터페이스계층
		(OSI 7 Layers: 물리계층,데이터링크계층)
		
	2.인터넷계층
		(OSI 7 Layers: 네트워크계층)
		
	3.전송계층
		(OSI 7 Layers: 전송계층)
		
	4.응용계층
		(OSI 7 Layers: 세션계층,표현계층,응용계층)
		
캡슐화
	송신할때 계층을 지나면서 헤더정보가 추가되는  것
	(응용계층 -> 물리계층으로 전달함)
	
	1.응용계층(응용계층+표현계층+세션계층)
		데이터(또는 메시지)
	
	2.전송계층 
		TCP헤더 대표정보: 송수신 Port번호
		세그먼트 형태: 
			TCP헤더 + 데이터
	
	3.네트워크계층
		IP헤더 대표정보: 송수신 IP 주소
		패킷 형태:
			IP헤더 + TCP헤더 + 데이터
		
	4.데이터링크계층
		이더넷헤더 대표정보: 송수신 MAC 주소		
		프레임 형태: 	
			이더넷헤더 + IP헤더 + TCP헤더 + 데이터 + 트레일러
			
			※ 트레일러(trailer)는 데이터 오류 검출을 위해 사용한다
	
	5.물리계층
		계층을 통해 캡슐화된 데이터를 전기신호로 바꿔서 다음 네트워크 장비로 전달
		
역캡슐화
	수신할때 계층을 지나면서 헤더정보를 하나씩 벗겨내는 것
	
	1.물리계층
		전기신호를 디지털 정보로 변환
		수신된데이터: 이더넷헤더 + IP헤더 + TCP헤더 + 데이터 + 트레일러
		
	2.데이터링크계층
		(-)이더넷헤더와 트레일러 제거
		
		IP헤더 + TCP헤더 + 데이터
	
	3.네트워크계층
		(-)Ip헤더 제거
		
		TCP헤더 + 데이터
		
	4.전송계층
		(-)TCP헤더 제거
		
		데이터
		
	5.응용계층(세션계층+표현계층+응용계층)
	
		수신된 데이터 전달됨
		
VPN (Virtual Private Network)
	- 인터넷을 통해 안전하게(보안이 강화된) 터널링 기술을 이용하여 사설 네트워크를 구축하는 기술
	- 구현 기술로는 IPSec(Internet Protocol Security) , SSL(Secure Socket Layer) 가 있다
	
	1. IPSec(Internet Protocol Security)
		OSI 7 계층 : 3계층 (네트워크 계층)
		암호화 : IP 패킷 암호화
		접속 : 클라이언트 소트트웨어를 설치하여 VPN 서버 접속
		
	2. SSL(Secure Socket Layer)
		OSI 7 계층 : 4 ~7계층 (주로 6계층에 동작)
			- (4.전송계층,5.세션계층,6표현계층,7응용계층)
		암호화 : 데이터 암호화
		접속 : 웹브라우저에서 VPN 서버 접속

전송방향에 따른 통신 방식
	- 단방향 통신(Simple Transmission): 선로(channel)가 하나만 있고, 일방통행만 가능. (TV,라디오 방신)
	- 양방향 통신(Duplex Transmission): 반이중,전이중 방식이 있다.
		- 반이중(Half Duplex): 
			- 동시에 송수신 불가 
			- 충돌문제가 생긴다.
			- 충돌하는 범위를 Collision Domain 이라 한다.
			- 허브에서 사용하는 방식
			
		- 전이중: 
			- 동시에 송수신 가능
			- 채널을 2개 갖추고 있다
			- 스위치에서 사용하는 방식
			
통신 프로토콜
	CSMA/CD 통신 프로토콜: (Carrier Sense Multiple Access with Collision Detection) 
		눈치게임 통신방식 (반이중 통신)
		방식 : 1-persistent ,  nonpersistent , p-persistent 
		데이터링크계층으로 기술되는데, 실제 구현은 허브(물리계층)에 구현되기에 
		데이터링크계층 기술로 분류되고, 장비는 물리계층 장비(허브)를 이용한다
		현재 쓰이지 않는다(대부분 MAC 주소 사용방식 스위치를 사용하기 때문)
		
	MAC 주소 통신 프로토콜:
		랜카드에 할당된 MAC 주소로 통신하는 방식
		MAC 주소는 전세계에 하나만 존재한다.
		데이터링크계층 기술로 분류되고, 장비도 데이터링크계층 장비(스위치)를 이용한다
		
이더넷 (Ethernet)
	물리계층, 데이터링크계층의 대표 프로토콜(통신방식이 아니라 구조)
	같은 지역의 네트워크인 LAN을 유선으로 구현한 기술 방식
	이더넷은 케이블을 사용하여 장치를 연결하는 유선 네트워크 기술입니다
	초기엔 동축케이블을 사용했고, 현재는 UTP케이블, 광케이블등으로 바뀌었다
	CSMA/CD 기반(허브) , MAC 주소(스위치) 사용 방식이 있다

	허브 (물리계층 장비)
		CSMA/CD 프로토콜 통신 (현재 쓰이지 않음)
		동축케이블 사용
		충돌을 감지해 반이중통신을 하는 프로토콜
		현재 쓰이지 않음
		
	스위치 (데이터링크계층 장비)
		MAC 주소 프로토콜 통신
		UTP케이블, 광케이블 사용
			
	초기 이더넷은 동축케이블을 사용하는 버스형 네트워크였는데
	동시에 송신하면 충돌이 발생하기 때문에 CSMA/CD가 만들어졌습니다.
	하지만 CSMA/CD는 속도에 한계가 있으므로
	UTP케이블과 광케이블을 이용한 이더넷이 등장했습니다.
	현재 이더넷은 데이터링크계층 MAC 주소를 이용해 주변기기를 구분하고 
	실제 전송은 물리 계층(전기, 빛, 전파)를 이용합니다.	

OSI 7 레이어로 구분해보자

1.물리계층
	컴퓨터들과 네트워크 장비들을 물리적으로 연결하거나, 데이터를 전기신호로 변환하거나, 전기신호를 디지털 신호로 복호화
	관련장비 : 랜카드,케이블,리피터,허브
	사용되는 데이터 단위 : 비트
	
		- 랜카드 (Lan card): 전기신호>디지털 변환, 디지털신호>전기신호 변환
			
		- 케이블 (Cable): 
			UTP (Unshield Twisted Pair): 쉴드 없는 쌍으로 꼬인 케이블(2 x 4가닥),일반적인 케이블
			FTP (Folied Twisted Pair) : 
				- 알루미늄 은박이 쌍으로 꼬인 4가닥 선을 감싸고 있는 케이블
				- UTP에 비행 절연기능이 좋고 공장 배선용으로 많이 사용
			STP (Shielded Twisted Pair):
				- 한쌍의 꼬인 케이블마다 외부 피복(shielded)으로 감싸고 있는 케이블
				- 외부잡음 차단 및 전기적 신호 간섭을 줄이는 용도로 사용.
				- 비싸다
		- 리피터 (Repeater): 
			- 거리가 멀어서 약해진 전기신호를 증폭 시키기 위한 장치
			- 일대일 통신만 가능
			- 요즘은 허브가 이 기능을 대신하기에 찾아보기 힘들다.
						
		- 허브 (Hub): 
			- 전송 데이터 정형,증폭,보정(리피터 기능)
			- 연결된 모든장치(컴퓨터)에게 데이터 전송하는 특징.
				- 하나의 입력신호를 여러 디바이스로 복제하여 데이터 분배 및 네트워크 확장
			- 허브는 CSMA/CD  프로토콜 방식을 사용하여 데이터 전송시 충돌이 발생할 수 있습니다.
			- 스위치에 비해 느리고 효율은 낮지만, 단순하다, 그래서 더미허브(Dummy Hub)라고 불리기도 한다
			
2.데이터링크계층
	데이터 전송의 정확성, 신뢰성, 효율성을 담당하는 계층
	회선제어, 오류제어, 흐름제어등을 담당
	CSMA/CD 통신(허브)  또는 MAC 주소(스위치) 통신을 한다.
	관련장비: 스위치 (Switch)
	사용되는 데이터 단위: 프레임
	ARP 프로토콜 : 
		- IP 주소에 해당하는 MAC 주소를 매핑하기 위한 프로토콜
		- 단말 장치의 [ARP테이블]에 IP주소 , MAC주소 필드 형태로 저장하고 통신한다.
		- ARP 테이블은 운영 체제나 네트워크 드라이버와 같은 소프트웨어에서 관리된다		
		
	스위치:
		- ARP 통신으로 알게되는 스위치 포트에 연결된 단말장치의 MAC 주소를 [MAC 테이블]형태로 관리한다
		- port 번호, MAC 주소 필드 형식이다
		
		
	(통신과정)
		스위치:
			- 스위치는 port별 연결된 장치의 MAC 주소를 (MAC 테이블)로 관리한다.
			- 단말 장치가 port 처음 연결되었을때 MAC 주소가 비어있다.
			
		(내 컴퓨터 ARP 테이블에 IP주소에 매칭된 MAC주소가 없을때):
		
			- 내 컴퓨터에서 스위치에 연결된 모든 장치에게 브로드캐스트(Broadcast)로 
				IP 주소에 해당하는 MAC 주소를 물어본다. 이 과정을 (Flooding) 이라한다 
			
			- 단말 장치별로 자신의 IP와 수신된 IP를 비교해서 맞다면 응답(APP Reply)한다
			(자신의 IP와 맞지 않는 수신 IP라면 그냥 버린다[응답하지 않는다])
			
			- 응답으로 자신의 MAC 주소를 다시 송신하는데, 스위치를 거쳐 지나갈때 응답 단말장치 MAC 주소를 
				스위치 MAC 테이블에 port번호 + MAC주소를 저장한다
			
			- 응답받은 내 컴퓨터는 자신의 ARP 테이블에 IP주소 + MAC주소를 저장한다
			
			- 이제 MAC 주소를 알았으므로 정식 송신 요청을 하게 된다.
			
		(내 컴퓨터 ARP 테이블에 IP주소에 매칭된 MAC주소가 있을때):	
					
			- 이제 ARP가 아닌 수신 MAC주소가 담긴 송신 요청이 스위치로 전달되고, 스위치는 자신의 MAC테이블에 있는
				송신 MAC주소와 일치된  port에 연결된 단말장치에만 송신하게 된다.
			
			
		내 컴퓨터 명령프롬프트 arp -a 명령어로 ARP 테이블(IP주소,MAC주소) 확인 가능
			
2.네트워크계층
	IP주소로 목적지를 찾는 단계. IP 주소로 통신한다
	네트워크 게이트웨이 역할을 하는 라우터로 다른 네트워크에 데이터를 전달하는데, 
	다른 네트워크 라우터에 도착하기 위한 최단 경로를 찾는 과정을 라우팅이라고 한다
	라우터는 라우팅 테이블(Routing Table)을 이용해 경로를 찾는다
	관련장비: 라우터(Router)
	사용되는 데이터 단위: 패킷
	
	IP 주소(Internet Protocol Address)
		- 공인IP(public IP), 와 사설IP(private IP) 가 있다
		- IPv4는 4바이트(32비트) 형식으로 되어있다
		- 형식
			2진수: 11000000 . 10101000 . 00000010 . 011111100
			10진수: (192)   . (168)    . (2)      . (124)
			
		- 자주 보게될 사설IP 주소 대역
			10.0.0.0 ~ 10.255.255.255
			172.16.0.0 ~ 172.31.255.255
			192.168.0.0 ~ 192.178.255.255
			
	IP 기본구조
		네트워크ID, 호스트ID로 구분된다
		예) 192.168.2.124 
			- 192.168.2 는 네트워크ID 이다
			- 124는 호스트ID 이다
	IP주소 클래스
		공인IP 주소는 A~E 클래스까지 5개이다
		D,E는 일반인을 위한 클래스가 아니므로 A,B,C 클래스만 사용된다.
		
		(A 클래스):
		- 비트 맨 첫 자리는 '0'으로 고정
		- 00000000.00000000.00000000.00000000 ~ 01111111.11111111.11111111.11111111
		- 0.0.0.0 ~ 127.255.255.255
		
		(B 클래스):
		- 비트 맨 첫 자리는 '10'으로 고정
		- 10000000.00000000.00000000.00000000 ~ 10111111.11111111.11111111.11111111
		- 128.0.0.0 ~ 191.255.255.255
		
		(C 클래스):
		- 비트 맨 첫 자리는 '110'으로 고정
		- 11000000.00000000.00000000.00000000 ~ 11011111.11111111.11111111.11111111
		- 192.0.0.0 ~ 223.255.255.255
		
	서브넷 , 서브넷 마스크
		호스트ID의 비트 일부를 네트워크ID로 포함해서 한개의 네트워크 호스트 갯수를 나눠 새로운 네트워크로 분할할 수 있다.
		이렇게 나눠진 네트워크를 서브넷이라고 한다
		서브넷 마스크 기법으로 나눈다. 이렇게 나누는 것을 서브넷팅(subneting) 이라고 한다.
		비트 AND 연산을 하는 구조로 계산된다.
		
		예를 들어 C 클래스 IP 주소 192.168.2.124 와 서브넷 주소 255.255.255.0 를 보자
		C 클래스 디폴트 서브넷은 아래와 같다
		
			11111111.1111111.11111111.00000000 (255.255.255.0)
			
		'1' 마스크 된 부분이 네트워크ID 영역을 만들어준다. '0'은 호스트ID영역이 된다.	
		그러므로 192.168.2.124 와 서브넷이 255.255.255.0이면
		192.168.2 는 네트워크ID , 124는 호스트ID가 되는 것이다
		
		또한 아래와 같은 C 클래스 IP주소가 서브넷 마스크와 AND 연산해서 나온 주소가 네트워크 주소가 된다.
			
			11000000.10101000.00000010.011111100 (아이피 주소: 192.168.2.124)
		(AND)	11111111.11111111.11111111.000000000 (서브넷마스크: 255.255.255.0)
			------------------------------------
			11000000.10101000.00000010.000000000 (네트워크주소: 192.168.2.0)
		
		[192.168.2.0] 는 네트워크주소가 되고, 192.168.2.124 는 [192.168.2.0] 네트워크 호스트가 된다
		호스트ID 영역은 8비트이므로 총 256개의 호스트를 가질 수 있다.
		이 중 네트워크주소인 192.168.2.0 는 사용할 수 없고, 192.168.2.255 는 브로드캐스트 주소라 사용 할 수 없다
		그러므로 사용할 수 있는 호스트 갯수는 256 - 2 = 254 개가 된다.
		네트워크 호스트 갯수 영역에서 항상 2개는 약속된 주소이므로 사용할 수 없다.
		
		이제 호스트를 나눠보자 
		현재는 한개의 네트워크주소에 256개 호스트를 사용할 수 있는 C 클래스 디폴트 서브넷이다
			
			(서브넷마스크): 11111111.1111111.11111111.00000000 (255.255.255.0)
		
		맨 마지막 옥텟 '00000000' 중에 첫 비트를 1로 만들어 준다 
			(서브넷마스크): 11111111.1111111.11111111.10000000 (255.255.255.128)
		
		네트워크ID 마스크는 '11111111.1111111.11111111.1' 까지가 되는 것이고 
		1비트 뺀 '0000000' 는 호스트ID 마스크가 된다
		
		이제 IP주소(192.168.2.124)로 AND 연산을 해보자
		
			11000000.10101000.00000010.011111100 (아이피 주소: 192.168.2.124)
		(AND)	11111111.11111111.11111111.100000000 (서브넷마스크: 255.255.255.128)
			------------------------------------
			11000000.10101000.00000010.000000000 (네트워크주소: 192.168.2.0)
			
		별 영향이 없다.
		그럼 IP 호스트 주소가 128인 192.168.2.128이 되면?
		
			11000000.10101000.00000010.100000000 (아이피 주소: 192.168.2.128)
		(AND)	11111111.11111111.11111111.100000000 (서브넷마스크: 255.255.255.128)
			------------------------------------
			11000000.10101000.00000010.100000000 (네트워크주소: 192.168.2.128)
			
		네트워크주소가 192.168.2.128 로 바뀐다.
		3개 옥텟은 내가 바꿀 수 없고 마지막 4번째 옥텟(8비트)만 바꿀 수 있는게 C클래스다
		디폴트 서브넷 마지막 옥텟 8비트 중 1비트를 네트워크 마스크로 만드니 네트워크주소(영역) 가 2개가 생기게 된다
			
			192.168.2.0
			192.168.2.128

		한개 네트워크(256개 호스트)가 2개로 나눠져서 각 네트워크주소당 
			
			192.168.2.0 ~ 192.168.2.127 (128개)
			192.168.2.128 ~ 192.168.2.255 (128개)
		
		의 호스트IP를 할당 할 수 있게 된다
			
		이런 식으로 네트워크를 나눌 수 있는데, 공식은 다음과 같다
			
			- 서브넷 호스트영역 마스크 중 제일 왼쪽부터 연속으로 1로 마스크한다. 중간에 건너 뛰는 것은 허용 안됨.
				.100000000 , .11000000 (o)
				.010000000 , .10100000 (x)
		
		'100000000' 한 비트만 마스크 하면 첫 번째 비트로 인해 AND 연산으로 나올 수 있는 경우의 수가 0과 1이다.
		그래서 2개의 네트워크주소가 생긴다
		
		
		'110000000' 2개 비트를 마스킹 하면 마스킹된 비트의 경우의 수는 4개의 경우의 수가 나온다
			
			00
			01
			10
			11 
		
		그러므로 4개의 네트워크 주소를 쪼갤 수 있는 원리다
		
		'111000000' 3개 비트를 마스킹 하면 나올수 있는 마스킹 경우의 수는 8개다		
			
			000
			001
			010
			011
			100
			101
			110
			111
			
		그러므로 8개의 네트워크 주소를 쪼갤수 있다.
		
		하다보니 패턴이 보인다. 1비트씩 증가할 수록 쪼개지는 네트워크 수가 2^n승 임을 알 수 있다.
			2^1 = 2
			2^2 = 4
			2^3 = 8
			2^4 = 16
			2^5 = 32
			2^6 = 64
			..
	
		좌측부터 연속된 비트로 마스킹 하므로 십진 수 표현도 구해보자
		좌측 부터 비트당 표현 숫자를 보면
		
			128,64,32,16,8,4,2,1
			
		이므로, 좌측 1비트의 연속이므로 비트별 숫자를 더하면 서브넷 십진수 표현이 나온다.
		
			(디폴트) 255.255.255.0 = 1개 네트워크 , 네트워크당 256개 호스트
			
			(1비트) 255.255.255.128 = 2개 네트워크 , 네트워크당 128개 호스트
			(2비트) 255.255.255.192 = 4개 네트워크 , 네트워크당 64개 호스트
			(3비트) 255.255.255.224 = 8개 네트워크 , 네트워크당 32개 호스트
			(4비트) 255.255.255.240 = 16개 네트워크 , 네트워크당 16개 호스트
			(5비트) 255.255.255.248 = 32개 네트워크 , 네트워크당 8개 호스트
			(6비트) 255.255.255.252 = 64개 네트워크 , 네트워크당 4개 호스트
			(7비트) 255.255.255.254 = 128개 네트워크 , 네트워크당 2개 호스트
			(8비트) 255.255.255.255 = 256개 네트워크 , 네트워크당 1개 호스트
		
		끝에 255,254는 의미 없다. 나온 갯수 중에 네트워크 주소와 , 브로드캐스트 주소를 빼야하므로 (-2)
		실질적 사용 가능은 252가 마지막 이다. 6비트까지 마스킹 사용가능
			
		