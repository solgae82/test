서브넷 , 서브넷 마스크
	호스트ID의 비트 일부를 네트워크ID로 포함해서 한개의 네트워크 호스트 갯수를 나눠 새로운 네트워크로 분할할 수 있다.
	이렇게 나눠진 네트워크를 서브넷이라고 한다
	서브넷 마스크 기법으로 나눈다. 이렇게 나누는 것을 서브넷팅(subneting) 이라고 한다.
	비트 AND 연산을 하는 구조로 계산된다.
	
	예를 들어 C 클래스 IP 주소 192.168.2.124 와 서브넷 주소 255.255.255.0 를 보자
	C 클래스 디폴트 서브넷은 아래와 같다
	
		11111111.1111111.11111111.00000000 (255.255.255.0)
		
	'1' 마스크 된 부분이 네트워크ID 영역을 만들어준다. '0'은 호스트ID영역이 된다.	
	그러므로 192.168.2.124 와 서브넷이 255.255.255.0이면
	192.168.2 는 네트워크ID , 124는 호스트ID가 되는 것이다
	
	또한 아래와 같은 C 클래스 IP주소가 서브넷 마스크와 AND 연산해서 나온 주소가 네트워크 주소가 된다.
		
		11000000.10101000.00000010.011111100 (아이피 주소: 192.168.2.124)
	(AND)	11111111.11111111.11111111.000000000 (서브넷마스크: 255.255.255.0)
		------------------------------------
		11000000.10101000.00000010.000000000 (네트워크주소: 192.168.2.0)
	
	[192.168.2.0] 는 네트워크주소가 되고, 192.168.2.124 는 [192.168.2.0] 네트워크 호스트가 된다
	호스트ID 영역은 8비트이므로 총 256개의 호스트를 가질 수 있다.
	이 중 네트워크주소인 192.168.2.0 는 사용할 수 없고, 192.168.2.255 는 브로드캐스트 주소라 사용 할 수 없다
	그러므로 사용할 수 있는 호스트 갯수는 256 - 2 = 254 개가 된다.
	네트워크 호스트 갯수 영역에서 항상 2개는 약속된 주소이므로 사용할 수 없다.
	
	이제 호스트를 나눠보자 
	현재는 한개의 네트워크주소에 256개 호스트를 사용할 수 있는 C 클래스 디폴트 서브넷이다
		
		(서브넷마스크): 11111111.1111111.11111111.00000000 (255.255.255.0)
	
	맨 마지막 옥텟 '00000000' 중에 첫 비트를 1로 만들어 준다 
		(서브넷마스크): 11111111.1111111.11111111.10000000 (255.255.255.128)
	
	네트워크ID 마스크는 '11111111.1111111.11111111.1' 까지가 되는 것이고 
	1비트 뺀 '0000000' 는 호스트ID 마스크가 된다
	
	이제 IP주소(192.168.2.124)로 AND 연산을 해보자
	
		11000000.10101000.00000010.011111100 (아이피 주소: 192.168.2.124)
	(AND)	11111111.11111111.11111111.100000000 (서브넷마스크: 255.255.255.128)
		------------------------------------
		11000000.10101000.00000010.000000000 (네트워크주소: 192.168.2.0)
		
	별 영향이 없다.
	그럼 IP 호스트 주소가 128인 192.168.2.128이 되면?
	
		11000000.10101000.00000010.100000000 (아이피 주소: 192.168.2.128)
	(AND)	11111111.11111111.11111111.100000000 (서브넷마스크: 255.255.255.128)
		------------------------------------
		11000000.10101000.00000010.100000000 (네트워크주소: 192.168.2.128)
		
	네트워크주소가 192.168.2.128 로 바뀐다.
	3개 옥텟은 내가 바꿀 수 없고 마지막 4번째 옥텟(8비트)만 바꿀 수 있는게 C클래스다
	디폴트 서브넷 마지막 옥텟 8비트 중 1비트를 네트워크 마스크로 만드니 네트워크주소(영역) 가 2개가 생기게 된다
		
		192.168.2.0
		192.168.2.128

	한개 네트워크(256개 호스트)가 2개로 나눠져서 각 네트워크주소당 
		
		192.168.2.0 ~ 192.168.2.127 (128개)
		192.168.2.128 ~ 192.168.2.255 (128개)
	
	의 호스트IP를 할당 할 수 있게 된다
		
	이런 식으로 네트워크를 나눌 수 있는데, 공식은 다음과 같다
		
		- 서브넷 호스트영역 마스크 중 제일 왼쪽부터 연속으로 1로 마스크한다. 중간에 건너 뛰는 것은 허용 안됨.
			.100000000 , .11000000 (o)
			.010000000 , .10100000 (x)
	
	'100000000' 한 비트만 마스크 하면 첫 번째 비트로 인해 AND 연산으로 나올 수 있는 경우의 수가 0과 1이다.
	그래서 2개의 네트워크주소가 생긴다
	
	
	'110000000' 2개 비트를 마스킹 하면 마스킹된 비트의 경우의 수는 4개의 경우의 수가 나온다
		
		00
		01
		10
		11 
	
	그러므로 4개의 네트워크 주소를 쪼갤 수 있는 원리다
	
	'111000000' 3개 비트를 마스킹 하면 나올수 있는 마스킹 경우의 수는 8개다		
		
		000
		001
		010
		011
		100
		101
		110
		111
		
	그러므로 8개의 네트워크 주소를 쪼갤수 있다.
	
	하다보니 패턴이 보인다. 1비트씩 증가할 수록 쪼개지는 네트워크 수가 2^n승 임을 알 수 있다.
		2^1 = 2
		2^2 = 4
		2^3 = 8
		2^4 = 16
		2^5 = 32
		2^6 = 64
		..

	좌측부터 연속된 비트로 마스킹 하므로 십진 수 표현도 구해보자
	좌측 부터 비트당 표현 숫자를 보면
	
		128,64,32,16,8,4,2,1
		
	이므로, 좌측 1비트의 연속이므로 비트별 숫자를 더하면 서브넷 십진수 표현이 나온다.
	
		(디폴트) 255.255.255.0 = 1개 네트워크 , 네트워크당 256개 호스트
		
		(1비트) 255.255.255.128 = 2개 네트워크 , 네트워크당 128개 호스트
		(2비트) 255.255.255.192 = 4개 네트워크 , 네트워크당 64개 호스트
		(3비트) 255.255.255.224 = 8개 네트워크 , 네트워크당 32개 호스트
		(4비트) 255.255.255.240 = 16개 네트워크 , 네트워크당 16개 호스트
		(5비트) 255.255.255.248 = 32개 네트워크 , 네트워크당 8개 호스트
		(6비트) 255.255.255.252 = 64개 네트워크 , 네트워크당 4개 호스트
		(7비트) 255.255.255.254 = 128개 네트워크 , 네트워크당 2개 호스트
		(8비트) 255.255.255.255 = 256개 네트워크 , 네트워크당 1개 호스트
	
	끝에 255,254는 의미 없다. 나온 갯수 중에 네트워크 주소와 , 브로드캐스트 주소를 빼야하므로 (-2)
	실질적 사용 가능은 252가 마지막 이다. 6비트까지 마스킹 사용가능