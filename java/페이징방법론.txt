package org.dong2.asset;

public class Pagination {

	
	private int totalListCnt;	//전체 리스트 갯수
	
	private int totalPageCnt; 	//전체 페이지 갯수
	private int currentPageNum;	//현재 페이지 번호
	private int listPerPageCnt=10;	//페이지당 리스트 갯수	
	
	private int totalBlockCnt;	//전체 블록 갯수
	private int currentBlockNum;	//현재 블록 번호
	private int pagePerBlockCnt=10; //블록당 페이지 갯수
	private int startPageNumInBlock;//현재 블록 시작 페이지 번호
	private int endPageNumInBlock;	//현재 블록 끝 페이지 번호
	
	private int queryStartNum;	//쿼리로 가져올 row 시작 번호
	
	private boolean prevBlock;	//이전 블록 존재 여부
	private boolean nextBlock;	//다음 블록 존재 여부
	
	private boolean firstBlock;	//현재 블록이 첫번째인지 여부
	private boolean lastBlock;	//현재 블록이 마지막인지 여부
	
	/**
	 * 기본 설정 페이지 계산값 셋팅
	 * @param currentPageNum (현재 페이지 번호)
	 * @param totalListCnt (전체 리스트 갯수)
	 */
	public void setlValues(int currentPageNum, int totalListCnt) {
		this.currentPageNum = currentPageNum;
		this.totalListCnt = totalListCnt;
		this.calculate();
	}
	/**
	 * 페이지 계산값 셋팅
	 * @param currentPageNum (현재 페이지 번호)
	 * @param totalListCnt (전체 리스트 갯수)
	 * @param listPerPageCnt (페이지당 리스트 갯수)
	 * @param pagePerBlockCnt (블록당 페이지 갯수)
	 */
	public void setlValues(int currentPageNum, int totalListCnt, int listPerPageCnt, int pagePerBlockCnt) {
		this.currentPageNum = currentPageNum;
		this.totalListCnt = totalListCnt;
		this.listPerPageCnt = listPerPageCnt;
		this.pagePerBlockCnt = pagePerBlockCnt;
		this.calculate();
	}	
	public void calculate() {
		
		//1.전체 페이지 갯수 계산
		totalPageCnt = (int)(totalListCnt/listPerPageCnt);
		if(totalListCnt % listPerPageCnt > 0) {totalPageCnt++;}
		
		//2.전체 블록 갯수 계산
		 totalBlockCnt = totalPageCnt / pagePerBlockCnt;
		if(totalPageCnt % pagePerBlockCnt > 0) {totalBlockCnt++;}
		
		//3.현재 블록 번호 계산 
		currentBlockNum = (int)Math.ceil(currentPageNum / (double) pagePerBlockCnt);
		
		//4.현재 블록 시작 페이지 번호 계산
		startPageNumInBlock = ((currentBlockNum -1) * pagePerBlockCnt) + 1;
		
		//5.현재 블록 끝 페이지 번호 계산
		endPageNumInBlock = (startPageNumInBlock + pagePerBlockCnt) - 1;
		if(endPageNumInBlock > totalPageCnt) {endPageNumInBlock = totalPageCnt;}
		
		//6.쿼리로 가져올 row 시작 번호 계산
		queryStartNum = (currentPageNum-1) * listPerPageCnt; 
		
		//7.이전 블록 존재 여부 계산
		prevBlock = (currentBlockNum > 1)?true:false;
		
		//8.다음 블록 존재 여부
		nextBlock = (currentBlockNum < totalBlockCnt)?true:false;
		
		//9.현재 블록이 첫번째인지 여부
		firstBlock = (currentBlockNum <= 1)?true:false;
		
		//10.현재 블록이 마지막인지 여부
		lastBlock = (currentBlockNum >= totalBlockCnt)?true:false;
		
	}
	public int getTotalListCnt() {
		return totalListCnt;
	}
	public void setTotalListCnt(int totalListCnt) {
		this.totalListCnt = totalListCnt;
	}
	public int getTotalPageCnt() {
		return totalPageCnt;
	}
	public void setTotalPageCnt(int totalPageCnt) {
		this.totalPageCnt = totalPageCnt;
	}
	public int getCurrentPageNum() {
		return currentPageNum;
	}
	public void setCurrentPageNum(int currentPageNum) {
		this.currentPageNum = currentPageNum;
	}
	public int getListPerPageCnt() {
		return listPerPageCnt;
	}
	public void setListPerPageCnt(int listPerPageCnt) {
		this.listPerPageCnt = listPerPageCnt;
	}
	public int getTotalBlockCnt() {
		return totalBlockCnt;
	}
	public void setTotalBlockCnt(int totalBlockCnt) {
		this.totalBlockCnt = totalBlockCnt;
	}
	public int getCurrentBlockNum() {
		return currentBlockNum;
	}
	public void setCurrentBlockNum(int currentBlockNum) {
		this.currentBlockNum = currentBlockNum;
	}
	public int getPagePerBlockCnt() {
		return pagePerBlockCnt;
	}
	public void setPagePerBlockCnt(int pagePerBlockCnt) {
		this.pagePerBlockCnt = pagePerBlockCnt;
	}
	public int getStartPageNumInBlock() {
		return startPageNumInBlock;
	}
	public void setStartPageNumInBlock(int startPageNumInBlock) {
		this.startPageNumInBlock = startPageNumInBlock;
	}
	public int getEndPageNumInBlock() {
		return endPageNumInBlock;
	}
	public void setEndPageNumInBlock(int endPageNumInBlock) {
		this.endPageNumInBlock = endPageNumInBlock;
	}
	public int getQueryStartNum() {
		return queryStartNum;
	}
	public void setQueryStartNum(int queryStartNum) {
		this.queryStartNum = queryStartNum;
	}
	public boolean isPrevBlock() {
		return prevBlock;
	}
	public void setPrevBlock(boolean prevBlock) {
		this.prevBlock = prevBlock;
	}
	public boolean isNextBlock() {
		return nextBlock;
	}
	public void setNextBlock(boolean nextBlock) {
		this.nextBlock = nextBlock;
	}
	public boolean isFirstBlock() {
		return firstBlock;
	}
	public void setFirstBlock(boolean firstBlock) {
		this.firstBlock = firstBlock;
	}
	public boolean isLastBlock() {
		return lastBlock;
	}
	public void setLastBlock(boolean lastBlock) {
		this.lastBlock = lastBlock;
	}
	
}


-------------------- java 테스트
package test;

import org.dong2.asset.Pagination;

public class Test {

	public static void main(String[] args) {
		 
		int currentPageNum = 2; //현재 페이지 번호
		int totalListCnt = 302;	//전체 리스트 갯수 (count(*))
		int listPerPageCnt = 10; //페이지당 리스트 갯수
		int pagePerBlockCnt = 10; //블록당 페이지 갯수
		
		Pagination pagination = new Pagination();
		pagination.setlValues(currentPageNum, totalListCnt, listPerPageCnt, pagePerBlockCnt);
		
		System.out.println("전체 리스트 갯수 : "+pagination.getTotalListCnt());
		System.out.println("전체 페이지 갯수: "+pagination.getTotalPageCnt());
		System.out.println("현재 페이지 번호: "+pagination.getCurrentPageNum());
		System.out.println("페이지당 리스트 갯수: "+pagination.getListPerPageCnt());
		System.out.println();
		System.out.println("전체 블록 갯수:"+ pagination.getTotalBlockCnt());		
		System.out.println("현재블록 번호:"+pagination.getCurrentBlockNum());
		System.out.println("블록당 페이지 갯수:"+pagination.getPagePerBlockCnt());
		System.out.println("현재블록 시작 페이지 번호:" + pagination.getStartPageNumInBlock());		
		System.out.println("현재블록 끝 페이지 번호:" + pagination.getEndPageNumInBlock());
		System.out.println("쿼리로 가져올 시작 번호:" + pagination.getQueryStartNum());
		System.out.println("쿼리로 가져올 갯수:" + pagination.getListPerPageCnt());
		System.out.println();
		System.out.println("이전 블록 존재 여부:" + pagination.isPrevBlock());
		System.out.println("다음 블록 존재 여부:" + pagination.isNextBlock());
		System.out.println("현재 블록이 첫번째인지 여부:" + pagination.isFirstBlock());
		System.out.println("현재 블록이 마지막인지 여부:" + pagination.isLastBlock());
		System.out.println();
		
		
		//-------------페이징 구현
		int start = pagination.getStartPageNumInBlock();
		int end  = pagination.getEndPageNumInBlock();
		String strPage = "";
		for(int i=start; i<=end; i++) {
			
			strPage += i +"|";
		}
		
		if(!"".equals(strPage)) { strPage = strPage.substring(0,strPage.length()-1);}
		
		//페이지 출력
		if(!pagination.isFirstBlock()) System.out.print("<<처음 ");
		if(pagination.isPrevBlock()) System.out.print("<이전 ");
		System.out.print(strPage);
		if(pagination.isNextBlock()) System.out.print(" 다음>");
		if(!pagination.isLastBlock()) System.out.print(" 마지막>>");
	}
}

------------------- 실전 (jsp)
//페이징 셋
String p_page = (request.getParameter("page")==null)?"1":request.getParameter("page");	
int currentPageNum = 0; //현재 페이지 번호

try{
	currentPageNum = Integer.parseInt(p_page);
}catch(Exception e){
	out.println("paging parse error=>" + e.toString());
	return;
}

int totalListCnt = getAllCount(searchTxt);	//전체 리스트 갯수
int listPerPageCnt = 10; //페이지당 리스트 갯수
int pagePerBlockCnt = 10; //블록당 페이지 갯수

Pagination pagination = new Pagination();
pagination.setlValues(currentPageNum, totalListCnt, listPerPageCnt, pagePerBlockCnt);

//최종 쿼리 
sql = "SELECT * FROM T_TEST where 1=1 order by mIndex DESC limit %s,%s";
sql = String.format(sql, pagination.getQueryStartNum(), pagination.getListPerPageCnt());

------------------- 실전 (jstl)
<ul id="paging">
	<c:if test="${not pagination.isFirstBlock()}">
		<li><a href="javascript: void(0)" onclick="choosePage(1)" title="처음">&lt;&lt;</a></li>
	</c:if>
	<c:if test="${pagination.isPrevBlock()}">
		<li><a href="javascript: void(0)" onclick="choosePage(${pagination.getStartPageNumInBlock() -1})" title="이전">&lt;</a></li>
	</c:if>
	<c:forEach var="i" begin="${pagination.getStartPageNumInBlock()}"  end="${pagination.getEndPageNumInBlock()}">
		<c:choose>
			<c:when test="${pagination.getCurrentPageNum() eq i }">
		<li><span style="color: red" title="현재페이지">${i}</span></li>
			</c:when>
			<c:otherwise>
		<li><a href="javascript: void(0)" onclick="choosePage(${i})">${i}</a></li>
			</c:otherwise>
		</c:choose>
		
	</c:forEach>
	<c:if test="${pagination.isNextBlock()}">
		<li><a href="javascript: void(0)" onclick="choosePage(${pagination.getEndPageNumInBlock() + 1})" title="다음">&gt;</a></li>
	</c:if>
	<c:if test="${not pagination.isLastBlock()}">
		<li><a href="javascript: void(0)" onclick="choosePage(${pagination.getTotalPageCnt()})" title="마지막">&gt;&gt;</a></li>
	</c:if>
</ul>

---------------------실전 응용 html 출력 클래스
package org.dong2.asset;

public class HtmlPaination {

	public static String getPureHtml(Pagination pagination , String funcNm) {
		StringBuilder stb = new StringBuilder();
		
		stb.append("<ul>");
		stb.append(System.lineSeparator());
		//처음 블록
		if(!pagination.isFirstBlock()) {
			stb.append("<li><a href=\"javascript: void(0)\" onclick=\"");
			stb.append(funcNm);
			stb.append("(1)\" title=\"처음\">&lt;&lt;</a></li>");
			stb.append(System.lineSeparator());
		}
		//이전 블록
		if(pagination.isPrevBlock()) {
			stb.append("<li><a href=\"javascript: void(0)\" onclick=\"");
			stb.append(funcNm);stb.append("(");stb.append(pagination.getStartPageNumInBlock() -1);
			stb.append(")\" title=\"이전\">&lt;</a></li>");
			stb.append(System.lineSeparator());
		}
		
		//블록 페이지
		int start = pagination.getStartPageNumInBlock();
		int end = pagination.getEndPageNumInBlock();
		
		for(int i=start; i <= end; i++) {
			if(pagination.getCurrentPageNum() == i) {
				stb.append("<li><span class=\"currentPage\" title=\"현재");
				stb.append(i);stb.append("페이지\">");
				stb.append(i);stb.append("</span></li>");
			}else {
				stb.append("<li><a href=\"javascript: void(0)\" onclick=\"");
				stb.append(funcNm);
				stb.append("(");stb.append(i);stb.append(")\" title=\"");
				stb.append(i);stb.append("페이지\">");
				stb.append(i);stb.append("</a></li>");
			}
			stb.append(System.lineSeparator());
		}
		//다음 블록
		if(pagination.isNextBlock()) {
			stb.append("<li><a href=\"javascript: void(0)\" onclick=\"");
			stb.append(funcNm);stb.append("(");stb.append(pagination.getEndPageNumInBlock() + 1);
			stb.append(")\" title=\"다음\">&gt;</a></li>");
			stb.append(System.lineSeparator());
		}
		//마지막 블록
		if(!pagination.isLastBlock()) {
			stb.append("<li><a href=\"javascript: void(0)\" onclick=\"");
			stb.append(funcNm);stb.append("(");stb.append(pagination.getTotalPageCnt());
			stb.append(") title=\"마지막\">&gt;&gt;</a></li>");
			stb.append(System.lineSeparator());
		}
		stb.append("</ul>");
		stb.append(System.lineSeparator());
		return stb.toString();
		
	}
}

// 사용
String paginHtml = HtmlPaination.getPureHtml(pagination,"choosePage");
<%=paginHtml%>
