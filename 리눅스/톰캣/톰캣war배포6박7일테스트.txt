톰캣 8.5.51 에서 실험

백번넘게 테스트 후 알아낸 결과(미쳤지...),
여러 배포형식과, 가장 중요한 document root 등의 설정이 어떻게 돌아가는지 짐작하게 되었다
첨엔 짜증스러움과 논리적으로 이해 안가는 부분이 너무 많았다..

이 문서도 고치고 고친것만 6박 7일간 했다

배포형식(3가지)

	1. 옛날 방식 특정 디렉토리에 소스를 올리고, 이 위치를 document root로 설정하는 방법
	2. 설정된 특정 디렉토리에 war 파일을 올려놓고 톰캣 기동으로 자동 압축해제 시켜 배포하는 방법
	3. 톰캣에서 지원하는 웹프로그램에서 배포하는 방법.

	배포형식 3가지 중에 1,2번만 살펴 본다

배포시 필요한 설정 파일들 과 속성들
	
	톰캣홈/conf/server.xml 
	톰캣홈/conf/Catalina/localhost/컨텍스트명.xml (컨텍스트 분리시 필요한 설정파일)
		

이 설정 파일의 3가지 속성의 조합으로 컨텍스트가 변화무쌍하게 설정된다
	
	
	server.xml
	
	<Host name="localhost"  appBase="/home/web"   unpackWARs="true" autoDeploy="true">
		<Context path="" docBase="ex01" reloadable="true" />
	</Host>

	1.Host 태그 appBase="/home/web"
		
		웹애플리케이션 홈.
		절대 경로와 상대경로가 있는데 
			appBase="home/web" (상대경로)
		은 '톰캣홈'/home/web 을 뜻한다.
			appBase="/home/web" (절대경로)
		은 유닉스시스템 /home/web 경로다 
		(조심하자)
			

		이 디렉토리에 웹앱 디렉토리가 위치하고
		war 파일이 있다면 파일명으로 톰캣기동시 압축해제한다
			ex) ex01.war => ex01 (디렉토리)
		
	2.Context 태그의 docBase="ex01"
		
		/home/web 디렉토리 위치에 웹앱 ex01 이 있고,
			/home/web/ex01
				..
				WEB-INF
				META-INF

		docBase="ex01" 값이 있다면 이 태그가 웹앱 ex01 (컨텍스트)를 설정하는 태그가 된다.
		만약 웹액 디렉토리는 있는데 일치하는 Context 태그가  없다면 디폴트 컨텍스트로 
			
			<Context path="/ex01" docBase="ex01" />
		
		있다고 생각하면 된다.

		Host 태그의 appBase="/home/web" 와 결합해서 /home/web/ex01 컨텍스트가 되는 것이다

		2단계 디렉토리명도 가능하다고 함.
			ex01		#(o)
			ex01/e1		#(o)
			/ex01/e1	#(x) 이것은 절대경로로 설정 한것이다.
	
	3.Context 태그의 path="/ex"
		
		브라우저 url 접근시 /ex 로 접근 값
		"/" == "" 는 같은 값이다.  "" 가 공식 값이다.
		(로그를 보니까 "/" 는 ""으로 재설정하다는 내용이 있더라)
		

<Host appBase="webapps"> => 톰캣홈/webapps (상대경로)
<Host appBase="/home/web"> /home/web (절대경로)

<Host appBase="/home/web"> /home/web 경로는 웹애플리케이션이 시작되는 경로이다 

<Host appBase="/home/web"> /home/web 에 ex01.war 파일이 있다면 
톰캣 기동시 압축해제하고 ex01 디렉토리가 생기고 ex01 컨텍스트로 등록한다.

<Host appBase="/home/web"> 설정된 경로의 모든 디렉토리는 컨텍스트 대상이다
<Host appBase="/home/web"> 설정된 경로에 app 디렉토리가 있고 그 안에 웹앱 소스가 배포되었다면, 
app 컨텍스트가 배치되고 '/app'로 접근 가능하다

<Host appBase="/home/web">
	<Context docBase="ex01">
</Host> 일때
는 /home/web + ex01 = /home/web/ex01 컨텍스트가 되고
해당 위치에 저와 같은 /home/web/ex01 디렉토리가 존재해야 한다.
(없으면 톰캣기동 실패 또는 에러 뿜는다)

<Host appBase="/home/web">
	<Context docBase="ROOT">
</Host> 일때
톰캣에서 쓰이는 특별한 예약어 ROOT 웹앱 디렉토리가 있는데 ,
appBase="/home/web" 에 ROOT명으로 웹앱 배포하면 
ROOT 컨텍스트가 되고, 이 녀석만 특별하게 브라우저 접속시 '/' 으로 접속 가능하다.

	'/' ==  ROOT 컨텍스트 == ROOT디렉토리 

접근시 '/' 하고 싶은 욕구가 있으니 여러 설정 잔꾀가 나온다.

기타
<Host appBase="" /> 이렇게 하면 대참사 벌어진다(절대 하지 말아야) 
왜냐면, [톰캣홈]의 모든 디렉토리와 파일들을 서비스하는 일이 벌어진다..ㅋㅋ


※ 지금까지 쓴 내용은 아래의 실험을 바탕으로 서서히 얻어낸 개인해석의 결과다..
(개인주석도 그냥 나온게 아님..첨엔 헷갈리다가 나중에 feel이 왔음)

아래 실험 내용은 개고생 실험의 역사다

졸라 길다
살펴 보려면 보자

-----------.war로 배포시
	
	배포 순서
		1. ex01.war 생성
		2. /home/web 에 업로드
		3. server.xml 등 설정파일 설정
		4. 톰캣 기동
		5. /home/web 에 war파일명인 ex01 웹 디렉토리 배포 확인
		
		※ 톰캣 기동 중 ex01.war 파일을 삭제하면, 배포된 ex01도 같이 삭제된다. 톰캣 끄고 삭제해야 한다
		(이것 때문에 헷갈려서 한참 헤멨음)

	예제로 ex01.war를 톰캣 <Host appBase="/home/web"> 에 설정된 /home/web에 업로드하고
	(이 속성에 설정된 경로 아니면 압축해제 안함) 톰캣 재기동 하면, 
	war파일명인 ex01 디렉토리가 생기고 그 안에 ex01.war 압축내용을 해제하게 된다.

	원리를 알았으니, 
	테스트 해보자

	(톰캣홈/conf/server.xml 에 모두 설정하는 방법으로)
	/home/web 에 ex01.war 업로드 후 톰캣 기동 배포 테스트

	설정0.
		배포 디렉토리 : /home/web/ex01.war
		-------------------------------------------
		<Context/> 설정 없을때
		-------------------------------------------
		<Host name="localhost"  appBase="/home/web"   unpackWARs="true" autoDeploy="true">
			<!--Context 없다 -->
		</Host>

		톰캣 기동 후 로그 :

			웹 애플리케이션 아카이브 [/home/web/ex01.war]을(를) 배치합니다.
			웹 애플리케이션 아카이브 [/home/web/ex01.war]의 배치가 [554] 밀리초에 완료되었습니다.

		확인 : 
			/home/web에 생성된 디렉토리 : ex01

			url매핑 : 
				'/' => 404 not found
				/ex01  => /home/web/ex01 매핑.

		개인주석 : 			
			ex01 디렉토리가 생겼고, ex01컨텍스트가 생겼고,  접근은 /ex01 로 자동 매핑


	설정1. 
		배포 디렉토리 : /home/web/ex01.war
		-------------------------------------------
		 appBase="/home/web" path="" docBase="" 일때
		-------------------------------------------
		<Host name="localhost"  appBase="/home/web"   unpackWARs="true" autoDeploy="true">
			<Context path="" docBase="" reloadable="true" />
		</Host>
		
		톰캣 기동 후 로그 : 
			웹 애플리케이션 아카이브 [/home/web/ex01.war]을(를) 배치합니다.
			웹 애플리케이션 아카이브 [/home/web/ex01.war]의 배치가 [57] 밀리초에 완료되었습니다.

		확인 : 
			/home/web에 생성된 디렉토리 : ex01

			url매핑 : 
				'/' => /home/web 매핑 .
				/ex01  => /home/web/ex01 매핑.

		개인주석 : 
			설정된 Context 태그는 ex01 컨텍스트 설정 구문이 아니다.
			docBase="" 은 현재 설정된 appBase 경로인 /home/web 가 되고,
			path="" 은  '/'를 뜻하고 이 경로에 연결하라는 뜻이니,
			'/' 경로가 => /home/web 매핑 되는 것.

			이것과 관계없이,
			ex01 디렉토리가 생겼고, ex01컨텍스트가 생겼고,  접근은 /ex01 로 자동 매핑

				
	설정2. 
		배포 디렉토리 : /home/web/ex01.war
		-------------------------------------------
		appBase="/home/web" path="/ex" docBase="" 일때
		-------------------------------------------

		<Host name="localhost"  appBase="/home/web"   unpackWARs="true" autoDeploy="true">
			<Context path="/ex" docBase="" reloadable="true" />
		</Host>
		
		톰캣 기동 후 로그 : 
			웹 애플리케이션 아카이브 [/home/web/ex01.war]을(를) 배치합니다.
			웹 애플리케이션 아카이브 [/home/web/ex01.war]의 배치가 [59] 밀리초에 완료되었습니다.

		확인 :			
			/home/web에 생성된 디렉토리 : ex01

			url매핑 : 
				'/' => 404 not found
				/ex => /home/web/ 매핑.
				/ex01  => /home/web/ex01 매핑.
		개인주석 : 
			설정된 Context 태그는 ex01 컨텍스트 설정 구문이 아니다.
			docBase="" 은 현재 설정된 appBase 경로인 /home/web 가 되고
			path="/ex" 경로에 연결하는 뜻이니,
			'/ex' 경로가 => /home/web 매핑 되는 것같다.(어때?)

			이것과 관계없이,
			ex01 디렉토리가 생겼고, ex01컨텍스트가 생겼고,  접근은 /ex01 로 자동 매핑
		
	설정3. 
		배포 디렉토리 : /home/web/ex01.war
		-------------------------------------------
		appBase="/home/web" path="" docBase="ex01" 일때
		-------------------------------------------
		<Host name="localhost"  appBase="/home/web"   unpackWARs="true" autoDeploy="true">
			<Context path="" docBase="ex01" reloadable="true" /> 
			
		</Host>	
		
		톰캣 기동 후 로그 : 
			웹 애플리케이션 아카이브 [/home/web/ex01.war]을(를) 배치합니다.
			웹 애플리케이션 아카이브 [/home/web/ex01.war]의 배치가 [49] 밀리초에 완료되었습니다.
		
		확인 : 
			/home/web에 생성된 디렉토리 : ex01,ROOT

			url매핑:
				처음 배포시
					'/'  => /home/web/ROOT 매핑
					/ex01 => /home/web/ex01 매핑
					
				다시 톰캣 재기동하면,
					'/'  => /home/ex01 매핑
					/ex01 => /home/web/ex01 매핑
					
		
		개인주석:
			대체 톰캣은 왜 그럴까?
			진짜 끝도 없이 좆 같다
			또 상상의 나래로 그럴싸한 뇌피셜을 하자면.., 
			압축해제된 ex01 디렉토리가 있고 docBase="ex01" 매치가 되면, 
			음 이 디렉토리가 이 Context 설정과 매핑이군 하고 그 다음 path 값을 보니 '/'이네? 
			(path="" ='/') 그럼 걍 '/'로 연결해주지.... 않고, 톰캣은 
			'야 컨텍스트 이름하고 똑같이 하던가 아니면 path 명과 똑같은 디렉토리 하나 더 복사할테니 다시 결정해라' 하고
			'/' 이니까 ROOT 디렉토리에 하나 더 만들어 놓는 것은 아닐까?
			
			아래 계속 테스트에서 나오겠지만,
			path="/ex01" docBase="ex01" 이면 ex01 디렉토리 하나만 만들고,
			path="/ex" docBase="ex01" 이면 ex, ex01 2개 디렉토리를 만들더라...

			처음 배포시 연결과 그 뒤 재기동시 연결값은 왜 다른 거야?..
			처음엔 2개 디렉토리에 각각 연결해놓고... 골라~ 골라~~ 하다가 
			재기동시에는 원래 설정대로 작동하는 건가 (어때 대출 해석이 맞아 들어가지?)
				

			뭔가 이유가 있겠지만...참 시발 열받게 한다. 뭔 설명도 없고..
			
	설정4. 
		배포 디렉토리 : /home/web/ex01.war
		-------------------------------------------
		appBase="/home/web" path="/ex01" docBase="ex01" 일때
		-------------------------------------------
		<Host name="localhost"  appBase="/home/web"   unpackWARs="true" autoDeploy="true">
			<Context path="/ex01" docBase="ex01" reloadable="true" /> 
			
		</Host>	
		
		톰캣 기동 후 로그 : 
			#컨텍스트 배치 관련 로그가 없다
		
		확인 : 
			/home/web에 생성된 디렉토리 : ex01

			url매핑:
				'/' => 404 not found
				/ex01 => /home/web/ex01 매핑

		개인주석 : 
			압축해제된 ex01 디렉토리가 있고 docBase="ex01" 매치가 되면, 이 녀석이 ex01 컨텍스트 설정이군
			하고, path 값을 보니 path="ex01" 3개가 모두 매치되니.. 그럼 1개만 만들면 되겠군..
			그렇게 생각하니 톰캣 개눔아?

	설정5. 
		배포 디렉토리 : /home/web/ex01.war
		-------------------------------------------
		appBase="/home/web" path="/ex" docBase="ex01" 일때
		-------------------------------------------
		<Host name="localhost"  appBase="/home/web"   unpackWARs="true" autoDeploy="true">
			<Context path="/ex" docBase="ex01" reloadable="true" />
		</Host>
		톰캣 기동 후 로그 : 
			웹 애플리케이션 아카이브 [/home/web/ex01.war]을(를) 배치합니다.
			웹 애플리케이션 아카이브 [/home/web/ex01.war]의 배치가 [31] 밀리초에 완료되었습니다.
		
		확인 : 
			/home/web에 생성된 디렉토리 : ex01,ex
		
			url매핑:
				처음 배포시
					'/'  => 404 not found
					/ex01 => /home/web/ex01 매핑
					/ex => /home/web/ex 매핑
					
				다시 톰캣 재기동하면,
					'/'  => 404 not found
					/ex01 => /home/web/ex01 매핑
					/ex => /home/web/ex01 매핑

		주석 : 	
			설정3 에서 뇌피셜 해석을 했듯이, 딱 그런 식으로 2개를 풀어 놓는다
			처음 기동시와, 그 다음부터 연결 방식 다른 것도 똑같다

	설정6. 
		배포 디렉토리 : /home/web/ex01.war
		-------------------------------------------
		appBase="/home/web" path="" docBase="ex04" 일때
		-------------------------------------------
		<Host name="localhost"  appBase="/home/web"   unpackWARs="true" autoDeploy="true">
			<Context path="" docBase="ex04" reloadable="true" />
		</Host>
		톰캣 기동 후 로그 : java 에러 잔뜩....

		확인 : 
			디렉토리도 생기지 않는다(압축해제도 안함)
			톰캣 기동 에러  

		주석:
			아마도 유효성 체크를 하나 보다.
			이 설정 조합은 /home/web/ex04 가 되는데,  
			ex01.war 압축해제 했다면 실제 /home/web/ex01 이므로 매칭되는 웹앱디렉토리 없음..
			그래서 기동도 안하나? 
			일단 결과의 해석으로는 컨텍스트는 있는데 웹앱이 없으면 기동 중지다.



--------- 옛날 방식으로 특정 디렉토리에 수동 배치시..

	.war 배포 설정과 다를게 없다. (먼저 .war 배포를 자세히 읽고 이걸 보면 편하다)
	/home/web/ex01 디렉토리에 웹앱 배포 후 기동하는 것으로 테스트
	수학 문제 풀듯 차근히 대입하면 논리가 맞는다.
	다시 복습한다 생각하고 해석해보자

	설정0.
		배포 디렉토리 : /home/web/ex01
		-------------------------------------------
		<Context/> 설정 없을때
		-------------------------------------------
		<Host name="localhost"  appBase="/home/web"   unpackWARs="true" autoDeploy="true">
			<!--Context 없다 -->
		</Host>

		톰캣 기동 후 로그 :

			웹 애플리케이션 디렉토리 [/home/web/ex01]을(를) 배치합니다.
			웹 애플리케이션 디렉토리 [/home/web/ex01]에 대한 배치가 [398] 밀리초에 완료되었습니다.

		확인 : 
			url매핑 : 
				'/' => 404 not found
				/ex01  => /home/web/ex01 매핑.

		
	
	설정1. 
		배포 디렉토리 : /home/web/ex01
		-------------------------------------------
		appBase="/home/web" path="" docBase="" 일때
		-------------------------------------------
		<Host name="localhost"  appBase="/home/web"   unpackWARs="true" autoDeploy="true">
			<Context path="" docBase="" reloadable="true" />			
		</Host>
		
		톰캣 기동 후 로그 : 
			웹 애플리케이션 디렉토리 [/home/web/ex01]을(를) 배치합니다.
			웹 애플리케이션 디렉토리 [/home/web/ex01]에 대한 배치가 [25] 밀리초에 완료되었습니다.

		확인 : 
			url매핑:
				'/' => /home/web 매핑.
				'/ex01' => /home/web/ex01 매핑.

	설정2. 
		배포 디렉토리 : /home/web/ex01
		-------------------------------------------
		appBase="/home/web" path="/ex" docBase="" 일때
		-------------------------------------------

		<Host name="localhost"  appBase="/home/web"   unpackWARs="true" autoDeploy="true">
			<Context path="/ex" docBase="" reloadable="true" />
		</Host>
		
		톰캣 기동 후 로그 : 
			웹 애플리케이션 디렉토리 [/home/web/ex01]을(를) 배치합니다.
			웹 애플리케이션 디렉토리 [/home/web/ex01]에 대한 배치가 [37] 밀리초에 완료되었습니다.


		확인 : 
			url매핑:
				'/' => 404 not found.
				'/ex' => /home/web 매핑.
				'/ex01' => /home/web/ex01 매핑.
			
	설정3. 
		배포 디렉토리 : /home/web/ex01
		-------------------------------------------
		appBase="/home/web" path="" docBase="ex01" 일때
		-------------------------------------------

		<Host name="localhost"  appBase="/home/web"   unpackWARs="true" autoDeploy="true">
			<Context path="" docBase="ex01" reloadable="true" />
		</Host>
		
		톰캣 기동 후 로그 : 
			웹 애플리케이션 디렉토리 [/home/web/ex01]을(를) 배치합니다.
			웹 애플리케이션 디렉토리 [/home/web/ex01]에 대한 배치가 [38] 밀리초에 완료되었습니다.


		확인 : 
			url매핑:
				'/' => /home/web/ex01 매핑.
				'/ex01' => /home/web/ex01 매핑.

	설정4. 
		배포 디렉토리 : /home/web/ex01
		-------------------------------------------
		appBase="/home/web" path="/ex01" docBase="ex01" 일때
		-------------------------------------------

		<Host name="localhost"  appBase="/home/web"   unpackWARs="true" autoDeploy="true">
			<Context path="/ex01" docBase="ex01" reloadable="true" />
		</Host>
		
		톰캣 기동 후 로그 : 
			웹 애플리케이션 디렉토리 [/home/web/ex01]을(를) 배치합니다.
			웹 애플리케이션 디렉토리 [/home/web/ex01]에 대한 배치가 [36] 밀리초에 완료되었습니다.

		확인 : 
			url매핑:
				'/' => 404 not found
				'/ex01' => /home/web/ex01 매핑.

	설정5. 
		배포 디렉토리 : /home/web/ex01
		-------------------------------------------
		appBase="/home/web" path="/ex" docBase="ex01" 일때
		-------------------------------------------

		<Host name="localhost"  appBase="/home/web"   unpackWARs="true" autoDeploy="true">
			<Context path="/ex" docBase="ex01" reloadable="true" />
		</Host>
		
		톰캣 기동 후 로그 : 
			웹 애플리케이션 디렉토리 [/home/web/ex01]을(를) 배치합니다.
			웹 애플리케이션 디렉토리 [/home/web/ex01]에 대한 배치가 [34] 밀리초에 완료되었습니다.


		확인 : 
			url매핑:
				'/' => 404 not found.
				'/ex' => /home/web/ex01 매핑.
				'/ex01' => /home/web/ex01 매핑.
			

	설정6. 
		배포 디렉토리 : /home/web/ex01
		-------------------------------------------
		appBase="/home/web" path="" docBase="ex04" 일때
		-------------------------------------------

		<Host name="localhost"  appBase="/home/web"   unpackWARs="true" autoDeploy="true">
			<Context path="" docBase="ex04" reloadable="true" />
		</Host>
		
		톰캣 기동 후 로그 : 
			자바 에러 , 톰캣 기동 중지

		확인 : 톰캣 기동 중지

--------- 컨텍스트를 외부 xml로 분리하기

	예전엔 server.xml에 모두 설정했었다는데,
	요즘은, Context  태그를 외부파일로 빼서[컨텍스트명.xml] 설정하게 되어 있다는데, 이것이 공식 설정 이라고 함.
	
	[컨텍스트명.xml] 위치 : 
		톰캣홈/cont/[엔진명]/[hostname]/컨텍스트명.xml 형식으로 정확히 맞춰 줘야 한다
		(이 경로 설명만으로 섹션이 하나 생길 정도니 다른 문서로 참조하길..)

		예) 톰캣홈/conf/Catalina/localhost/ROOT.xml

	[컨텍스트명.xml] 설정의 좋은 점 중 하나가 톰캣 기동 중에 설정해도 반영된다(재기동 안해도 새로운 설정 가능)

	[컨텍스트명.xml] 작성 방법은 아래처럼 두 가지가 있다.

	1. 수동으로 [컨텍스트명.xml] 만들기(예: ROOT 컨텍스트)
		
		톰캣홈/conf/Catalina/localhost/ROOT.xml #생성
			
			<?xml version="1.0" encoding="UTF-8"?>
				<Context path="" docBase="" reloadable="true"></Context>
			</xml>
		
	2. 웹앱에 포함해서 .war 배포시 톰캣 context 설정 위치에 [컨텍스트명.xml] 자동 복사되게 하기

		[컨텍스트명.xml] : context.xml(이름으로 해야된다,톰캣이 읽기 위해 약속된 이름)
		copyXML="true" : Context 태그 속성에 저 속성값 "true" 꼭 줘야 복사가 됨.

		1. 웹앱/META-INF/context.xml 작성 
			<?xml version="1.0" encoding="UTF-8"?>
				<Context path="" docBase="" reloadable="true" copyXML="true"></Context>
			</xml>
		2. ROOT.war 패키징 
		3. 웹애플리케이션 디플로이 디렉토리에 업로드
		4. 톰캣 기동
			톰캣이 기동프로세서가 
				웹앱/META-INF/context.xml을 복사해서
				톰캣홈/conf/Catalina/localhost/ROOT.xml  # ROOT.war 파일명으로 변경 복사(context.xml -> ROOT.xml).
		5. 설정 적용 후 기동

	(
	!!! 문제점이 있다!!!
	
		파일명=컨텍스명 

	이렇게 설정되면 [컨텍스트명.xml] 파일 내용 속성중에 docBase="" 와 뭔가 충돌이 있지 않나? 있으나 마나 한 것인가?
	)	
	※ etc 예제에서 테스트 예정...

		

--------- 컨텍스트명 없이 '/' 로만 설정하기

	- ROOT 디렉토리 배포 해서 '/'  만들기

		컨텍스트를 ROOT로 하면 된다
		ROOT 디렉토리(컨텍스트)는 예약된 디렉토리이다 '/' 로 접근 가능.
		'/' 컨텍스트로 만들기 위해 이런 방식을 쓴다.
	
	- appBase="절대경로" 지정 후 빈 Context 넣어 '/' 만들기
		ROOT가 아닌 이름의 디렉토리를 '/' 로 만들때 하는 법이다
		<Host name="localhost"  appBase="/home/web/ex01">
			<Context path="" docBase="" reloadable="true" /> 처럼 빈 속성 태그를 꼭 넣어줘야 한다.
		</Host>
	
	1. ROOT.war 배포 후 '/' 설정

		배포디렉토리 : /home/web/ROOT.war

		vi 톰캣홈/conf/server.xml

		<Host name="localhost"  appBase="/home/web" unpackWARs="true" autoDeploy="true">
			
			<!-- Context가 없거나  -->
			<Context path="" docBase="ROOT" reloadable="true" />
			
			
		</Host>
		
		톰캣 기동 후 로그 :
			Context 없이 기동 했을때 :  
				웹 애플리케이션 아카이브 [/home/web/ROOT.war]을(를) 배치합니다.
				웹 애플리케이션 아카이브 [/home/web/ROOT.war]의 배치가 [601] 밀리초에 완료되었습니다.
			
			docBase="ROOT" 기동 했을때 :
				# 컨텍스트 배포 로그가 없이 그냥 기동된다. 
				# 동작 결과는 Context 없이 기동과 같다
			
		확인 : 
			/home/web에 생성된 디렉토리 : ROOT
			url매핑 :
				'/' => /home/web/ROOT 
				/ROOT => 404 not found
		
	2. ROOT 디렉토리에 수동 배포 후 '/'설정

		1. 톰캣홈/conf/server.xml에 모두 설정
			
			배포디렉토리 : /home/web/ROOT
			
			vi 톰캣홈/conf/server.xml
			<Host name="localhost"  appBase="/home/web" unpackWARs="true" autoDeploy="true">
				
				<!-- Context가 없거나  -->
				<Context path="" docBase="ROOT" reloadable="true" />
				
			</Host>

			톰캣 기동 후 로그 :
				Context 없이 기동 했을때 :  
					웹 애플리케이션 디렉토리 [/home/web/ROOT]을(를) 배치합니다.
					웹 애플리케이션 디렉토리 [/home/web/ROOT]에 대한 배치가 [470] 밀리초에 완료되었습니다.

				
				docBase="ROOT" 기동 했을때 :
					# 컨텍스트 배포 로그가 없이 그냥 기동된다. 
			확인 : 
				
				url매핑 : 
					'/' => /home/web/ROOT
					/ROOT => 404 not found

		2. 톰캣홈/conf/Catalina/localhost/ROOT.xml 에 설정 
			
			배포디렉토리 : /home/web/ROOT
			
			vi 톰캣홈/conf/server.xml
			<Host name="localhost"  appBase="/home/web" unpackWARs="true" autoDeploy="true">					
			</Host>
			
			vi 톰캣홈/conf/Catalina/localhost/ROOT.xml 
					
				<?xml version="1.0" encoding="UTF-8"?>
				<!-- 
					docBase="ROOT" 가 핵심 
					docBase="" 하면 
						'/' => /home/web/
						/ROOT => /home/web/ROOT
					엉뚱한 결과가..
				-->
				<Context path="" docBase="ROOT" reloadable="true"></Context>

			
			톰캣 기동 후 로그 :
				[/opt/tomcat/apache-tomcat-8.5.51/conf/Catalina/localhost/ROOT.xml]을(를) 배치합니다.
				경고 [/home/web/ROOT]이(가) 지정되었으나, 이는 무시될 것입니다.
				[/opt/tomcat/apache-tomcat-8.5.51/conf/Catalina/localhost/ROOT.xml]의 배치가 [28] 밀리초 내에 완료되었습니다
			확인 :
				url매핑 :
					'/' => //home/web/ROOT
					/ROOT => 404 not found



	3. ex01 디렉토리 배포 후   '/' 설정하기
	
		1. 톰캣홈/conf/server.xml에 모두 설정
			
			배포디렉토리 : /home/web/ex01
			
			vi 톰캣홈/conf/server.xml

			<Host name="localhost"  appBase="/home/web/ex01" unpackWARs="true" autoDeploy="true">
				   <!-- 빈 값이라도 Context를 꼭 넣어 줘야 한다 -->
				   <Context path="" docBase="" reloadable="true" />
					
			</Host>
			톰캣 기동 후 로그 :
				# 컨텍스트 배포 로그가 없이 그냥 기동된다. 
			확인 : 
			
				url매핑 : 
					'/' => /home/web/ex01
					'/ex01' => 404 not found
			개인주석:
				Context  태그 해석을 하나면,
				docBase="" 이면 /home/web/ex01 를 뜻하게 된다 /home/web/ex01 컨텍스트를 설정하는 태그라는 뜻.
				path="" 는 '/' 를 뜻하니 

				'/' => /home/web/ex01 매핑이 나온다.
				'/ex01' => 404 not found : /home/web/ex01 위치에 ex01 따위의 디렉토리는 없다.

			-----------------------------------
			개인주석 :
				<Host name="localhost"  appBase="/home/web" unpackWARs="true" autoDeploy="true">
					  <Context path="/" docBase="ex01" reloadable="true" />	
				</Host>
			
				이렇게 하면 되는 거 아니여?
				위에서 학습한 대로 하면 이 방법이 맞다 
				ex01컨텍스트를 '/' 로 연결한다.
				근데 /ex01 로도 연결 된다. 두개의 건텍스트가 생긴다는 말...
				
				톰캣 기동 후 로그 :
					웹 애플리케이션 디렉토리 [/home/web/ex02]을(를) 배치합니다.
					웹 애플리케이션 디렉토리 [/home/web/ex02]에 대한 배치가 [26] 밀리초에 완료되었습니다.
				확인 : 
				
					url매핑 : 
						'/' => /home/web/ex01
						'/ex01' => /home/web/ex01

				이렇게 설정된 곳들 많다...
				근데 나는 컨텍스트명따윈 원하지 않는단 말이다.....
	
			-----------------------------------
			
		2. 톰캣홈/conf/Catalina/localhost/ROOT.xml 에 설정

			배포디렉토리 : /home/web/ex01
				
			vi 톰캣홈/conf/server.xml
			
				<Host name="localhost"  appBase="/home/web/ex01" unpackWARs="true" autoDeploy="true">
				</Host>
			vi 톰캣홈/conf/Catalina/localhost/ROOT.xml 
				
				<?xml version="1.0" encoding="UTF-8"?>
				<Context path="" docBase="" reloadable="true"></Context>

			
			톰캣 기동 후 로그 :
				[/opt/tomcat/apache-tomcat-8.5.51/conf/Catalina/localhost/ROOT.xml]을(를) 배치합니다.
				[/opt/tomcat/apache-tomcat-8.5.51/conf/Catalina/localhost/ROOT.xml]의 배치가 [604] 밀리초 내에 완료되었습니다.

			확인 :
				url매핑 :
					'/' => //home/web/ex01
					'/ex01' => 404 not found
	
		

-----------ROOT.war가 아닌 ex01.war 배포 +  '/' 자동 설정이 한번에 되게 하려면?
	
	내가 못 찾은 것인지는 모르지만,	
	war 배포 + '/'설정 하기를 한방에 끝내는 방법은 ROOT.war 뿐인 것 같다


	예를 들어 ex01.war를 업로드 해서 톰캣 기동 후 (ROOT가 아닌 ex01 디렉토리)  + '/' 설정도 되길 원한다면, 
	일단 war 업로드 톰캣기동으로 배포 후 , 톰캣 중지하고 ,  수동배치 설정을 바꾸고, 다시 톰캣 재기동 해야 하드라..
	(위에 war 배포와  특정 디렉토리 수동 배치를 혼합하는 방법)

	이해하기 편하게 server.xml에 모든 설정을 다 때려 넣는 방법으로 테스트 해보자..

		/home/web 에 ex01.war 업로드

		server.xml 열고
			appBase="/home/web" (.war 풀기 위해)

			<Host name="localhost"  appBase="/home/web" unpackWARs="true" autoDeploy="true">
				<!-- Context 설정 안하면 기본으로 압축해제 한다 -->
			</Host>

		톰캣 올려서 배포 시키고

			./startup.sh
		
		/home/web/ex01 디렉토리 확인.

		브라우저 /ex01 로 접근 가능 확인.(현재는  /ex01 컨텍스트로만 접근 가능, '/'접근 불가)


		톰캣 내리고 

			./shutdown.sh

		ex01.war 파일 삭제하고, (톰캣 내리고 삭제해야지 기동 중 삭제하면 배포 디렉토리도 동시에 삭제된다)
			

		수동 배치 설정 방식으로 다시 server.xml 열고 	'/' 로 인식하게 설정을 바꿔준다
			
			<Host name="localhost"  appBase="/home/web/ex01" unpackWARs="true" autoDeploy="true">
				<Context path="" docBase="" reloadable="true" />
			</Host>

		다시 톰캣 재기동

		브라우저로 '/' 로 접속 되는 지 확인.



--------- etc 예제

[컨텍스트명.xml] 로 분리해서 하는 방식으로 동적 테스트
	
	server.xml => 톰캣홈/conf/server.xml
	컨텍스트.xml => 톰캣홈/conf/Catalina/localhost/컨텍스트.xml

	
	1.예제
		배포 디렉토리 : /home/web/ex01
		
		server.xml
			<Host name="localhost"  appBase="/home/web" unpackWARs="true" autoDeploy="true">
		
		컨텍스트.xml: ex01.xml

			<?xml version="1.0" encoding="UTF-8"?>
			<Context path="/ex" docBase="ex01" reloadable="true">
			</Context>
		
		톰캣 기동 후 로그

			[/opt/tomcat/apache-tomcat-8.5.51/conf/Catalina/localhost/ex01.xml]을(를) 배치합니다.
			경고 .. 호스트 appBase 내의 docBase [/home/web/ex01]이(가) 지정되었으나, 이는 무시될 것입니다.
			[/opt/tomcat/apache-tomcat-8.5.51/conf/Catalina/localhost/ex01.xml]의 배치가 [635] 밀리초 내에 완료되었습니다

		url매핑 : 
			'/' => 404 not found
			/ex01 => /home/web/ex01
			/ex => 404 not found

		개인주석 :
			appBase + ex01.xml(파일명) = /home/web/ex01
			appBase + docBase = /home/web/ex01

			: ex01.xml의 파일명으로 컨텍스트명을 정하고 /home/web/ex01 디렉토리를 검색하니 있음(유효성 통과).
			docBase="ex01" 는 파일명과 컨텍스트명이 같아도 개무시(의미 없다)
						
			/ex01 로 접속 가능하다.
			path="/ex" 는 개무시된다.

	2.예제 

		배포 디렉토리 : /home/web/ex02
		
		server.xml
			<Host name="localhost"  appBase="/home/web" unpackWARs="true" autoDeploy="true">

		컨텍스트.xml: ex01.xml
			<?xml version="1.0" encoding="UTF-8"?>
			<Context path="/ex" docBase="ex02" reloadable="true"> 
			</Context>

		톰캣 기동 후 로그
			[/opt/tomcat/apache-tomcat-8.5.51/conf/Catalina/localhost/ex01.xml]을(를) 배치합니다.
			경고 .. 호스트 appBase 내의 docBase [/home/web/ex02]이(가) 지정되었으나, 이는 무시될 것입니다.
			자바에러..Caused by: java.lang.IllegalArgumentException: 지정된 주요 리소스셋 [/home/web/ex01]은(는) 유효하지 않습니다.  
			심각..배치 descriptor [/opt/tomcat/apache-tomcat-8.5.51/conf/Catalina/localhost/ex01.xml]을(를) 배치하는 중 오류 발생
			자바에러 ..
			[/opt/tomcat/apache-tomcat-8.5.51/conf/Catalina/localhost/ex01.xml]의 배치가 [79] 밀리초 내에 완료되었습니다.
			웹 애플리케이션 디렉토리 [/home/web/ex02]을(를) 배치합니다.
			웹 애플리케이션 디렉토리 [/home/web/ex02]에 대한 배치가 [446] 밀리초에 완료되었습니다.

		url매핑 : 
			'/' => 404 not found
			/ex01 => 404 not found
			/ex02 => /home/web/ex01
			/ex => 404 not found


		개인주석 : 
			appBase + ex01.xml(파일명) = /home/web/ex01
			appBase + docBase = /home/web/ex02

			: ex01.xml의 파일명으로 컨텍스트명을 정하고 /home/web/ex01 웹 디렉토리를 검색해보니 없음(유효성 불통과). 기동시 java 에러 뿜는다.
			ex02 디렉토리는 컨텍스트 설정 파일이 없으므로 디폴트 Context적용 해서 배치 
			
			path="/ex" 는 개무시 된다.

	3. 예제 
		배포 디렉토리 : /home/web/ex01

		server.xml
			<Host name="localhost"  appBase="/home/web" unpackWARs="true" autoDeploy="true">

		컨텍스트.xml: ex01.xml
			<?xml version="1.0" encoding="UTF-8"?>
			<Context path="/ex" docBase="ex03" reloadable="true" >
			</Context>

		톰캣 기동 후 로그
			[/opt/tomcat/apache-tomcat-8.5.51/conf/Catalina/localhost/ex01.xml]을(를) 배치합니다.
			경고 .. 호스트 appBase 내의 docBase [/home/web/ex03]이(가) 지정되었으나, 이는 무시될 것입니다.
			[/opt/tomcat/apache-tomcat-8.5.51/conf/Catalina/localhost/ex01.xml]의 배치가 [26] 밀리초 내에 완료되었습니다.
			
		url매핑 : 
			'/' => 404 not found
			'/ex01' => /home/web/ex01
			/ex03 => 404 not found
			/ex => 404 not found

		개인주석 :
			appBase + ex01.xml(파일명) = /home/web/ex01
			appBase + docBase = /home/web/ex03

			: ex01.xml의 파일명으로 컨텍스트명을 정하고 /home/web/ex01 디렉토리를 검색하니 있음(유효성 통과).
			docBase="ex03"는 파일명과 컨텍스트명이 다르므로 개무시
			path="/ex" 는 개무시된다.

			/ex01 로 접근가능.
			

	4. 예제 
		배포 디렉토리 : /home/web/ex01

		server.xml
			<Host name="localhost"  appBase="/home/web" unpackWARs="true" autoDeploy="true">

		컨텍스트.xml: ex01.xml
			<?xml version="1.0" encoding="UTF-8"?>
			<Context path="/ex" docBase="" reloadable="true" >
			</Context>

		톰캣 기동 후 로그
			[/opt/tomcat/apache-tomcat-8.5.51/conf/Catalina/localhost/ex01.xml]을(를) 배치합니다.
			[/opt/tomcat/apache-tomcat-8.5.51/conf/Catalina/localhost/ex01.xml]의 배치가 [37] 밀리초 내에 완료되었습니다.

			
		url매핑 : 
			'/' => /home/web
			'/ex01' => /home/web/ex01
			/ex => 404 not found

		개인주석 :
			appBase + ex01.xml(파일명) = /home/web/ex01
			appBase + docBase = /home/web

			: ex01.xml의 파일명으로 컨텍스트명을 정하고 /home/web/ex01 디렉토리를 검색하니 있음(유효성 통과).
			docBase="" 인데 그냥 개무시 하면 좋으련만, /home/web를 '/' 컨텍스트를 만든다..뭐여..
			(버그 아닐까?)

			/ex01 로 접근가능. 	
			'/' 접근 가능
			path="/ex" 는 개무시된다.

	
	--------------------정리

	테스트 하면서 결과를 보니 xml 분리하는 방식은 다른점이 있다
		
		1. path="/ex" 
			alias 역할을 했었는데 설정 무조건 개무시

		2. ex01.xml 파일명 VS docBase="ex02"
			
			컨텍스트명 있으면 무조건 개무시
		
		3. ex01.xml 파일명 VS docBase=""
			
			요게 참 희한한데..(걍 무시하지 이놈만)
			
			appBase="/home/web" 이라면
				
			docBase="" 이면 

				appBase + docBase = /home/web 
				
			이 되잖아
			
			그 /home/web 을 '/' 로 연결하더라고???

			버그 아닐까 생각해본다..

		4. 설정 태그는 있는데 디렉토리가 없을시..
			
			server.xml에서 모두 한번에 설정할때는
			appBase 위치에 Context 태그에 매치되는 디렉토리(웹앱)이 없다면 
			톰캣기동도 되질 않았었다.
			
			그런데,
			[컨텍스트명].xml 방식에서는 에러가 나도 기동은 된다.

	결론
		[컨텍스트명].xml 형식은 

		1. path : 무조건 개무시
		2. docBase : "" 빼고 무조건 개무시 
		3. 설정파일 존재 <> 매치되는 디렉토리 없어도 톰캣기동에 영향 없음.

