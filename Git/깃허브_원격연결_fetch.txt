
#플젝 디렉토리 만들고 초기화하기
	$ mkdir test
	$ cd test
	$ git init #초기화

#로컬플젝 name, email 값 설정
	$ git config --local user.name "fetch2"
	$ git config --local user.email "fetch2@test.com"
	$ git config --local --list #값 확인

#원격주소 별칭 설정하기
	사용법 : git remote add <원격 저장소 별칭> <원격 저장소 주소>
	
	$ git remote -v #설정 확인(현재는 없다)
	$ git remote add github https://github.com/solgae82/test.git #설정

	$ git remote -v #설정값 확인
	github  https://github.com/solgae82/test.git (fetch)
	github  https://github.com/solgae82/test.git (push)

# fetch 플젝소스 가져오기
	임시 브랜치로 가져오기만 하는 명령어

	사용법 : git fetch <원격 저장소 별칭> <원격 저장소 브랜치명>

	$ git fetch github main
		: 플젝이 다운로드 된다
		..
		From https://github.com/solgae82/test
		 * [new branch]      main       -> github/main (#받아 온 임시 브랜치명)


	$ git branch -a (임시 브랜치 확인)
	  remotes/github/main
 
# merge로 합치기

	사용법 : git merge <합칠 브랜치명>
	현재 브랜치 기준으로 지정한 branch를 합치는 명령어 

	$ git merge github/main

-------------------
중요!!
-------------------
마지막으로 원격 저장소 브랜치명과 로컬 저장소 브랜치명을 통일 시켜야 한다..
그래야 push할때 헤메지 않게 된다.

예를 들어,
로컬 브랜치명이 master 이고
원격 저장소 브랜치명이 'main' 이었다고 가정하면 
로컬 브랜치명을 원격 저장소명과 일치시켜 준다

	$ git branch -M main  # 현재 브랜치를 'main'으로 이름 변경

이렇게 하면 push 시에 명령 옵션이 짧아진다

	$ git push github main  

	# 로컬 main 브랜치를 github(원격저장소)의 'main' 브랜치에 push 한다는 뜻.
	
만약 브랜치명을 변경하지 않고 한다면 아래처럼 해야한다

	$ git push github master:main

복잡할 수 있으니 브랜치명도 통일 시키는 것이 좋겠다

