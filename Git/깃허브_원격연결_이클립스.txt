- github 연결 방식이 일반 로그인에서 토큰 방식으로 바뀌었다
	- 클래식토큰을 생성해서, [id / 클래식토큰] 으로 로그인해서 연결해야 한다

- 이클립스 github 연결방식
	- 연결 방식에는 크게 보면 세가지가 있다
	1. 이클립스에서 [프로젝트 생성 + git init] 후  생성한 github 리포지터리에 첫 push로 업로드해서 연결하기
	2. Git Hub 소스를 이클립스 clone 으로 연결하기 후 받은 소스를 이클립스 프로젝트로 등록 하기
	3. 이클립스 프로젝트 와 깃허브 소스를 병합해서 올리기(서로 관련없는 리포지토리 수동병합으로 관계설정)

-------------------//

1. 첫 프로젝트 push
	- 깃허브에 빈 리포지토리 생성
	- 이클립스 : 프로젝트 생성
	- 생성한 프로젝트 깃 init으로 로컬 리포지토리 만들기 : 
		프로젝트 우클릭>Team>Share Project..>Git>
		Use or create repository in parent folder of project 체크 > 
		아래 Create Repository 버튼 클릭(로컬리포지토리 생성) > 해당 프로젝트 체크 > finish
	- 깃 관리 프로젝트에서 파일 등 추가 add 후 첫 로컬 커밋
	- 프로젝트 원격 설정 후 첫 push 로 연결하기
		프로젝트 우클릭>team>remote>push>
		push to another repository 박스 :
			Location>URI에 깃허브 주소(원격주소) 복사 붙이기(자동으로 대충 채워짐)
			Connection : protocol 란에 https인지 확인
			Authentication : 
				User : 깃허브 계정
				Password : 계정에서 생성한 토큰(로그인 암호가 아님)

			마지막 Store in Secure Store 체크 (다음 부터 암호 안 물어보고 바로 push 할 수 있음)
			Next 클릭 
		
		원격 연결되면 아래 박스가 나온다(연결했으니 push 하라고..)

		push Ref Specifications 박스
			Add create/update specification
				Source ref: master[branch] 선택
				Destination ref: refs/heads/master 로 바뀜
				Add Spec 버튼 클릭

			Specifications for push 
				테이블 행에 Update가 추가된 것을 확인한다

			finish 버튼 클릭
		
		push results 박스
			잘 전송되었다는 메시지 박스가 뜬다

2. clone으로 가져와서 프로젝트 등록하기
	- 깃허브 리포지토리명 : test
	- 이클립스 window>show view>Git>Git repositories 로 리포지토리 탭 연다
	- 두번째 아이콘을 clone git repository 창을 연다
		- Location>URI : 깃허브 연결 주소를 넣는다(그러면 자동으로 나머지 입력창들이 채워짐)
		- Connection : 프로토콜(https) 선택 후 port는 비워 놓는다.
		- Authentication : 
			User : 깃허브 아이디를 넣는다
			Password : 계정에서 생성한 토큰(로그인 암호가 아님)
			Store in Secure Store 체크 (다음 부터 암호 안 물어보고 바로 push 할 수 있음)

			> Next > Branch Selectiong : 가져올 브랜치 선택 후 Next
			> Local Destination : 
				Destination : 깃허브 소스를 받을 디렉토리를 설정하는데, 이클립스 workspace 를 설정한다
			
			> Finish : 깃 허브 소스를 이클립스 workspace/test 으로 소스를 받아온다.

	- Git repositories 탭에 해당 소스가 보일것이다.
		
		test>Working Tree>우측마우스클릭>import Projects.. 클릭
		Import Projects from File System or Archive 창이 뜬다
			Import Project from File System or Archive 
				> import source : 선택 박스를 열어보면 위에서 등록한 test 절대경로가 나올 것이다.선택
				> Finish 

	위와 같이 하면 예를 들어 D:\workspace\test에 
	Git Repositories 탭이 관리하는 리스트의 경로와 
	그걸 기반으로 프로젝트를 같은 위치에 import 했으므로 이클립스가 관리하는 추가파일들이 등록되어서
	D:\workspace\test 는 Git Repositories 탭이 관리하는 리스트이자 이클립스 test 프로젝트가 된다.

3. 이클립스 프로젝트 와 깃허브 소스를 병합해서 연결
	이 방식은 전혀 관련 없는 깃 리포지토리 끼리 연결하는 방식으로 볼 수 있다.
	요약된 순서는 아래와 같다
		- 이클립스 프로젝트 git init으로 git 프로젝트로 만든다
		- 해당 프로젝트 git remote를 만들어진 깃허브 주소로 매핑
		- 서로 관련 없는 리포지토리이므로 수동으로 관계 맞추기
			- 깃허브 소스를 강제로 fetch  후 merge 과정을 하여 서로 관련된 리포지토리로 만들기
			- 그리고 push
	※전제조건이 있다. 
	이클립스 프로젝트와 병합이므로 혹시나 이클립스 관련 설정파일등이 원격소스에 있다면 절대하면 안 된다.

	-----------//실전
	- 이클립스 프로젝트  git init
		: 프로젝트 우클릭>Team>Share Project..>Git>
		Use or create repository in parent folder of project 체크 > 
		아래 Create Repository 버튼 클릭(로컬리포지토리 생성) > 해당 프로젝트 체크 > finish

	- 프로젝트 첫 커밋 : 아무 파일이나 일단 커밋을 해서 첫 이력을 만들어야 한다.

	- 프로젝트 remote 깃허브 리포지토리 주소 등록
		이 작업은 프로젝트 탭에서 보다는  Git repositories 탭으로 한다
		: Git repositories>해당프로젝트>Remotes>우측마우스클릭>create remote..
			Remote name: origin (원격별칭, 요걸 잘 기억해 놓자)
			create 버튼 클릭
			
			- Configure Push창
				URI>Change버튼>Select a URI창 

				- Location
				URI : 깃허브 주소 입력
				나머지는 자동으로 알아서 붙는다

				- Autentication
					User : 깃허브계정
					Password : 계정에서 생성한 토큰(로그인 암호가 아님)
				
				Save 버튼 설정 끝

		:이제 연결도 되었으니 push나  pull 이 될것 같지만, 
		서로 관련없는 리포지토리라 Git은 거절메시지를 뿌린다
		push 를 해보면 non-fast-forward 메시지가 뿌려진다

	- 서로 관련없는 리포지토리의 소스 강제로 받기
		Git repositories>해당프로젝트>Remotes>우측마우스클릭>Configure Fetch창
			- Ref mappings>Advenced..>Fetch Ref Speccification
				- Add create/update specification
					Source ref: refs/heads/master (입력)
					Destination ref : refs/remotes/origin/master (입력)
					
					  (왜 저렇게 입력하는지는 잘 모른다. 더 공부해야함
					  refs/heads/ 와 refs/remotes/ 라는게 있다는 것만 인식.
					  로컬의 refs/heads/master 브랜치와 
					  원격의 refs/remotes/origin/master 브랜치라는 뜻같다
					  )

					Add Spec클릭

				- Specification for fetch 
					 해당란 테이블에 방금 설정 값의 행이 보인다.

				Finish  클릭
			- Save and Fetch 버튼 클릭

			: 원격 리포지토리를 잘 fetch 했다는 메시지 창이 뜬다

	- 받아온 원격 소스 merge 하기
		Git repositories>해당프로젝트>Branch>Local>master선택 후 마우스 우클릭 > merge
			Merge 'master' 창이 뜬다

				Remote Tracking 폴더를 열고 merge 할 브랜치 선택

				Merge 버튼 클릭

			Merge Result 창이 뜨면서 
				Result => Merged/Failed 등이 뜬다

				: Merged가 뜨면 끝 
				Failed는 No~!! , 
				특히 이클립스 설정파일등이 있어서 merge가 되지 않는다면 원격소스의 이클립스 설정파일등을 삭제해야한다

				(Merged 되었다면 설정 끝)
			
	- 이제 해당 프로젝트 pull/push 등을 해 본다