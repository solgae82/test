-------------------Validator
	import org.springframework.stereotype.Component;
	import org.springframework.validation.Errors;
	import org.springframework.validation.ValidationUtils;
	import org.springframework.validation.Validator;

	import egovframework.rte.ptl.mvc.tags.ui.pagination.PaginationInfo;
	import egovframework.test.e2.service.Test;
	import egovframework.test.e2.service.TestVO;


	@Component("bBsValidator")
	public class BbsValidator implements Validator {

		@Override
		public boolean supports(Class<?> clazz) {
			
			
			
			Boolean bool = false;
			if(TestVO.class.isAssignableFrom(clazz)) {
				System.out.println("supports-------------실행:"+TestVO.class.isAssignableFrom(clazz)+":"+clazz);
				bool = true;
			}else if(Test.class.isAssignableFrom(clazz)) {
				System.out.println("supports-------------실행:"+Test.class.isAssignableFrom(clazz)+":"+clazz);
				bool = true;
			}else if(PaginationInfo.class.isAssignableFrom(clazz)) {
				System.out.println("supports-------------실행:"+PaginationInfo.class.isAssignableFrom(clazz)+":"+clazz);
				bool = true;
			}else if(StringUtils.class.isAssignableFrom(clazz)) {
				System.out.println("supports-------------실행:"+StringUtils.class.isAssignableFrom(clazz)+":"+clazz);
				bool = true;
			}
			return bool;
			
		}

		@Override
		public void validate(Object target, Errors errors) {
			..
		}

	}
-------------------Controller
	import egovframework.rte.ptl.mvc.tags.ui.pagination.PaginationInfo;
	import egovframework.test.e2.service.CodeVO;
	import egovframework.test.e2.service.Test;
	import egovframework.test.e2.service.TestService;
	import egovframework.test.e2.service.TestVO;
	import egovframework.test.e2.service.impl.BbsValidator;
	public class TestController {
		
		@ModelAttribute("StringUtils")
		public StringUtils setStringUtils() {
			return new StringUtils(); // 요 녀석도 체크해야할 대상 모델로 간주
		}

		@InitBinder
		protected void initBinder(WebDataBinder binder) {
			
			binder.setValidator(new BbsValidator());
			
		}

		@RequestMapping(value="/test.do")
		public String test(@ModelAttribute("searchVO") TestVO searchVO, Test test , Model model) throws Exception{
			
			model.addAttribute("testVO" , testService.selectBbs(searchVO)); //리스트 이므로 모델 체크 대상 제외
			model.addAttribute("paginationInfo",paginationInfo); // 체크해야할 모델로 간주
			model.addAttribute("test", new Test());		//체크해야할 모델로 간주

			return "/test2/list2test";
		}
	}

------- -----------실수하지 않기 위해 알아야할 지식

	@InitBinder 로 일괄 등록하면 편해 보이긴 하지만, 문제가 있다.
	@Valid로 지정한 것만 자동으로 유효성검사 체크를 할 것이라 생각하는데,

	무수히 많은 테스트를 해본 결과,
	Validator를 구현한 BbsValidator를 
	
		binder.setValidator(new BbsValidator()); 

	로 등록하면 
	요 녀석이 관여하는 곳이 @Valid 지정한 곳 뿐만이 아니라는 것이다.


	위 예제의 Controller test() 메소드를 보자

	BbsValidator.supports() 메소드는 기본적으로 모델로 볼 수 있는 녀석을 모두 체크한다.

	test() 메소드의 
		@ModelAttribute("searchVO") TestVO searchVO
		Test test

	이 두 녀석은 모델로 자동 등록된다. 그러므로 supports() 메소드가 체크한다

	메소드 내부의 명시적으로 model.addAttribute("모델명", 모델)으로 셋 하는 것 중 , 
	단일 오브젝트는 체크해야할 모델 오브젝트로 간주하고 BbsValidator.supports() 체크한다

		model.addAttribute("paginationInfo",paginationInfo); // 체크해야할 모델로 간주
		model.addAttribute("test", new Test());		//체크해야할 모델로 간주

	또 하나가 남았다
		@ModelAttribute("StringUtils")
		public StringUtils setStringUtils() {
			return new StringUtils(); // 요 녀석도 체크해야할 대상 모델로 간주
		}
		
	이렇게 체크해야할 대상이 있고, 이 녀석들을 모두 체크해야하는 코드를 BbsValidator.supports()에 넣어야 한다.
	만일 깜빡 빠트리고 체크대상을 넣지 않아 false가 반환 되면, 
	프로그램은 멈춘다. 아래 같은 메시지와 함께

		에러:  java.lang.IllegalStateException: Invalid target for Validator ...

	또한 체크 순서도 있는 것 같다

		1. 메소드 파라미터의 모델
		2. 메소드에 @ModelAttribute 설정한 모델
		3. 메소드 내부에 model.addAttribute 로 셋 하는 모델
		4. 메소드 파라미터의 모델 다시 셋하기 전 다시 체크

	대략 로그를 찍어보니 이렇게 동작하는 듯 하다..
	이 부분을 모르고 @InitBinder 로 셋을 하게 되면 큰 낭패를 당할 것이다..

	결론은 이렇게 쓰지 말자...(실수할 가능성이 매우 크므로)