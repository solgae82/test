요청시 POST로 보내고 , 응답은 JSON으로 출력하는 예제를 분석한다

테스트 기본 틀

	--------- test.jsp
	<form id="f">
		<input type="hidden" name="nm" value="솔개" />
		<input type="hidden" name="age" value="47" />
	</form>
	<button onclick="send()">전송</button>
	<script>
		function send(){
			..	
		}
	</script>

	---------- Controller.java
	@RestController
	@RequestMapping("/sample")
	public class RestControllerTest {
		..
	}


	---------- RestVO.java
	public class RestVO {

		private Integer mno;
		private String firstName;
		private String lastName;
		.. getter, setter 생략
	
	}
	
1. String 응답 출력

	function send(){
		var params = $('#f').serialize();
		console.log(params); //nm=%EC%86%94%EA%B0%9C&age=47
		$.post('/sample/string',params,function(data){
			console.log(data); //Hello World
		});
	}
	
	@RequestMapping("/string")
	public String testString(@RequestParam Map<String, String> map) {
		System.out.println(map); //{nm=솔개, age=47}
		return "Hello World";
	}
	
	헤더 값 : 
	request:
		Request Method: POST
		Content-Type: application/x-www-form-urlencoded; charset=UTF-8
	
	response:
		Content-Type: text/plain;charset=ISO-8859-1

2. RestVO 응답 출력 

	function send(){
		var params = $('#f').serialize();
		console.log(params); //nm=%EC%86%94%EA%B0%9C&age=47
		$.post('/sample/vo',params,function(data){
			console.log(data); //{mno: 123, firstName: '길동', lastName: '홍'}
		});
	}
	
	@RequestMapping("/vo")
	public RestVO testVO(@RequestParam Map<String, String> map) {
		System.out.println(map); //{nm=솔개, age=47}
		RestVO restVO = new RestVO();
		restVO.setFirstName("길동");
		restVO.setLastName("홍");
		restVO.setMno(123);
		return restVO;
	}
	
	헤더 값 : 
	request:
		Request Method: POST
		Content-Type: application/x-www-form-urlencoded; charset=UTF-8
	
	response:
		Content-Type: application/json;charset=UTF-8

3. List<RestVO> 응답 출력 

	function send(){
		var params = $('#f').serialize();
		console.log(params); //nm=%EC%86%94%EA%B0%9C&age=47
		$.post('/sample/listvo',params,function(data){
			console.log(data); 
			/*
			[
				{mno: 0, firstName: '길동', lastName: '홍'},
				{mno: 1, firstName: '길동', lastName: '홍'},
				..
				{mno: 9, firstName: '길동', lastName: '홍'}
			]
			*/
		});
	}
	
	@RequestMapping("/listvo")
	public List<RestVO> testlistVO(@RequestParam Map<String, String> map){
		System.out.println(map); //{nm=솔개, age=47}
		List<RestVO> list = new ArrayList<RestVO>();
		for(int i= 0; i< 10;i++) {
			RestVO vo = new RestVO();
			vo.setFirstName("길동");
			vo.setLastName("Hong");
			vo.setMno(i);
			list.add(vo);
		}
		
		return list;
	}
	
	헤더 값 : 
	request:
		Request Method: POST
		Content-Type: application/x-www-form-urlencoded; charset=UTF-8
	
	response:
		Content-Type: application/json;charset=UTF-8

4. Map<Integer, RestVO> 응답 출력 

	function send(){
		var params = $('#f').serialize();
		console.log(params); //nm=%EC%86%94%EA%B0%9C&age=47
		$.post('/sample/map',params,function(data){
			console.log(data); 
			/*
			{
				0: {mno: 0, firstName: '길동', lastName: 'Hong'},
				1: {mno: 1, firstName: '길동', lastName: 'Hong'},
				..
				9: {mno: 9, firstName: '길동', lastName: 'Hong'},
			}
			*/
		});
	}
	
	@RequestMapping("/map")
	public Map<Integer, RestVO> testMap(@RequestParam Map<String, String> map){
		System.out.println(map); //{nm=솔개, age=47}
		Map<Integer, RestVO> rMap = new HashMap<Integer, RestVO>();
				
		for(int i=0; i<10; i++) {
			RestVO vo = new RestVO();
			vo.setFirstName("길동");
			vo.setLastName("Hong");
			vo.setMno(i);
			rMap.put(i, vo);
		}
		
		return rMap;
	}
	
	헤더 값 : 
	request:
		Request Method: POST
		Content-Type: application/x-www-form-urlencoded; charset=UTF-8
	
	response:
		Content-Type: application/json;charset=UTF-8

5. ResponseEntity<String> 응답 출력 

	function send(){
		var params = $('#f').serialize();
		console.log(params); //nm=%EC%86%94%EA%B0%9C&age=47
		$.post('/sample/responseEntityString',params,function(data){
			console.log(data); //hello
		});
	}
	
	@RequestMapping("/responseEntityString")
	public ResponseEntity<String> testResponseEntityString(@RequestParam Map<String, String> map){
		System.out.println(map); //{nm=솔개, age=47}
		return new ResponseEntity<>("hello",HttpStatus.OK	);
	}
	
	헤더 값 : 
	request:
		Request Method: POST
		Content-Type: application/x-www-form-urlencoded; charset=UTF-8
	
	response:
		Content-Type: text/plain;charset=ISO-8859-1

6. ResponseEntity<List<RestVO>> 응답 출력 

	function send(){
		var params = $('#f').serialize();
		console.log(params); //nm=%EC%86%94%EA%B0%9C&age=47
		$.post('/sample/responseEntityListVO',params,function(data){
			console.log(data); 
			/*
			[
				0: {mno: 0, firstName: '길동', lastName: 'park'},
				1: {mno: 1, firstName: '길동', lastName: 'park'},
				..
				9: {mno: 9, firstName: '길동', lastName: 'park'}

			]
			*/
		});
	}
	
	@RequestMapping("/responseEntityListVO")
	public ResponseEntity<List<RestVO>> testResponseEntityList(@RequestParam Map<String, String> map){
		System.out.println(map); //{nm=솔개, age=47}
		List<RestVO> list = new ArrayList<RestVO>();
		for(int i = 0; i<10; i++) {
			RestVO vo = new RestVO();
			vo.setFirstName("길동");
			vo.setLastName("park");
			vo.setMno(i);
			list.add(vo);
		}
		
		return new ResponseEntity<List<RestVO>>(list, HttpStatus.OK);
	}
	
	헤더 값 : 
	request:
		Request Method: POST
		Content-Type: application/x-www-form-urlencoded; charset=UTF-8
	
	response:
		Content-Type: application/json;charset=UTF-8