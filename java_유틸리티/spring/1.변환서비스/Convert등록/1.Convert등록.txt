Convert 등록 방법

	PropertyEditor를 대신할 수 있는 스프링만의 방법
	멀티쓰레드에 안전하다
	구현체는 단방향만 구현하게 되어 있다(상태값을 저장하지 않기에 멀티쓰레드 안전)
	싱글톤 빈으로 등록한다. DI 받아서 사용 가능하다
	항상 두개씩 만들어야 양방향 변환 가능.

	스프링에서 'conversionService' 기본 이름인 것 같던데..(다른 테스트에서 2개 등록되었다고 자꾸 에러가 나서)
	(어차피 ConversionService 는 1개만 등록 가능)
	
	ConversionService를 두개 등록하려고 하면 에러를 맞게 된다
		java.lang.IllegalStateException: DataBinder is already initialized with ConversionService
		(한개만 등록 가능한가 보다)


---------//
Level.java

	public enum Level {
		GOLD(3, null), SILVER(2, GOLD), BASIC(1, SILVER);  
		
		private final int value;
		private final Level next; 
		
		Level(int value, Level next) {  
			this.value = value;
			this.next = next; 
		}
		
		public int intValue() {
			return value;
		}
		
		public Level nextLevel() { 
			return this.next;
		}
		
		public static Level valueOf(int value) {
			switch(value) {
			case 1: return BASIC;
			case 2: return SILVER;
			case 3: return GOLD;
			default: throw new AssertionError("Unknown value: " + value);
			}
		}
	}
---------//Convert 두개 구현

StringToLevelConverter.java

	package com.solgae.common;

	import org.springframework.core.convert.converter.Converter;

	import com.solgae.domain.Level;

	public class StringToLevelConverter implements Converter<String, Level> {

		@Override
		public Level convert(String source) {
			
			return Level.valueOf(Integer.parseInt(source));
		}

		
	}

LevelToStringConverter.java

	package com.solgae.common;

	import java.util.logging.Level;

	import org.springframework.core.convert.converter.Converter;

	public class LevelToStringConverter implements Converter<Level, String> {

			public String convert(Level level) {
				return String.valueOf(level.intValue());
			}
	}

---------// 
servelet-context.xml

	: <annotation-driven /> 태그는 많은 일을 한번에 해주지만, 
	기본 conversionService가 등록되므로,(한개만 등록 가능)

	Conversion 서비스 커스텀 설정을 위해서 <annotation-driven /> 설정이 아니 직접 빈 등록 방법으로 설정해야한다.

	<!--  annotation-driven /-->

	<beans:bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		
	</beans:bean>

---------//
root-context.xml

	<!--  Convert 등록 -->
	<bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<bean class="com.solgae.common.StringToLevelConverter" />
				<bean class="com.solgae.common.LevelToStringConverter" />
			</set>
		</property>
	</bean>

---------//
TestController.java
	@Controller
	public class TestController {


		Autowired
		@Qualifier("conversionService") // 이거 사용 안해도 된다. 어차피 1개만 등록 가능하므로..
		ConversionService conversionService; //DI 받는다

		@RequestMapping(value = "/level", method = RequestMethod.GET)
		public String home(@ModelAttribute Level level ) throws Exception {
			
			System.out.println("level========>"+ level);
			
			return "home";
		}

		@InitBinder
		public void initBinder(WebDataBinder binder) {
			binder.setConversionService(this.conversionService); //등록
		}
		
	}

---------//
	url : /?level=2

	출력 : 
		level========>SILVER