@ModelAttribute 모델의 도메인 프로퍼티 중 특정 프로퍼티만 적용하는 방법

  (도메인 오브젝트의 age 속성은 200살이 넘으면 안되고 0살 이하도 안된다)

---------//
User.java
	public class User {
		int age;

		public int getAge() {
			return age;
		}

		public void setAge(int age) {
			this.age = age;
		}
		
		
	}

---------//
MinMaxPropetyEditor.java
	public class MinMaxPropetyEditor extends PropertyEditorSupport {

		int min;
		int max;
		
		public MinMaxPropetyEditor(int min, int max) {
			this.min = min;
			this.max = max;
		}
		
		@Override
		public String getAsText() {
			
			Integer integer = (Integer)this.getValue();
			return String.valueOf(integer);
		}
		@Override
		public void setAsText(String text) throws IllegalArgumentException {
			Integer val = Integer.parseInt(text);
			
			if(val < min) {
				val = min;
			}else if(val > max) {
				val = max;
			}
			
			this.setValue(val);
		}
	}

---------//
TestController.java

	@Controller
	public class TestController {
		
		@RequestMapping(value = "/", method = RequestMethod.GET)
		public String home(@ModelAttribute User user) {
			
			System.out.println("제한나이=>"+user.getAge());
		
			
			return "home";
		}
		
		
		/**
		 * popertyEditor 바인더 추가
		 * @param binder
		 */
		@InitBinder
		public void initBinder(WebDataBinder binder) {
			//계속 등록 가능
			binder.registerCustomEditor(Level.class, new LevelPropertyEditor());
			binder.registerCustomEditor(int.class,"age", new MinMaxPropetyEditor(0,200));
		}
				
	}

---------//
	url : /?age=221
		출력 : 제한나이=>200
	url : /?age=-221
		출력 : 제한나이=>0